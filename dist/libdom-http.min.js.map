{"version":3,"file":"libdom-http.min.js","sources":["../src/lib/chain.js","../src/lib/driver.js","../src/lib/type.js","../src/lib/transform/helper.js","../src/lib/transform/request-json.js","../src/lib/transform/response-json.js","../src/lib/transform/request-form-urlencoded.js","../src/lib/transform/request-form-multipart.js","../src/lib/transform.js","../src/lib/driver/base.js","../src/lib/driver/xhr.js","../src/lib/driver/form-upload.js","../src/lib/transform/request-html5-form-data.js","../src/lib/header.js","../src/lib/operation.js","../src/lib/request.js","../node_modules/rollup-plugin-node-globals/src/global.js","../src/lib/detect.js","../src/lib/driver/xhr2.js","../src/all.js","../src/lib/transform/response-text-plain.js","../src/index.js"],"sourcesContent":["'use strict';\n\nvar MAIN_MODULE;\n\nexport\n    function use(mainModule) {\n        MAIN_MODULE = mainModule;\n    }\n    \nexport\n    function get() {\n        return MAIN_MODULE;\n    }","'use strict';\n\nimport {\n            string,\n            method,\n            createRegistry\n        } from \"libcore\";\n        \nimport { get as getModule } from \"./chain.js\";\n\n\nvar DRIVERS = createRegistry(),\n    DEFAULT = null,\n    exported = {\n        register: register,\n        exists: exists,\n        use: use,\n        get: get\n    };\n    \n/**\n * driver management\n */\nexport\n    function register(name, Class) {\n            \n        if (string(name) && method(Class)) {\n            DRIVERS.set(name, Class);\n            Class.prototype.type = name;\n            \n            if (!DEFAULT) {\n                DEFAULT = name;\n            }\n        }\n        \n        return getModule();\n    }\nexport\n    function exists(name) {\n        return DRIVERS.exists(name);\n    }\n\nexport\n    function use(name) {\n        if (arguments.length > 0 && exists(name)) {\n            DEFAULT = name;\n        }\n        return DEFAULT;\n    }\n\n/**\n * driver process\n */\nexport\n    function get(type) {\n        return DRIVERS.get(type);\n    }\n\nexport default exported;","'use strict';\n\n\nimport { string } from \"libcore\";\n        \nvar MIME_TYPE_RE =\n        /^([a-z0-9\\-\\_]+)\\/([a-z\\-\\_0-9]+)(([ \\s\\t]*\\;([^\\;]+))*)$/,\n    MIME_TYPE_PARAMS_RE =\n        /^[ \\t\\s]*([a-z0-9\\-\\_]+)\\=(\\\"([^\\\"]+)\\\"|[a-z0-9\\-\\_]+)[ \\t\\s]*$/,\n    QUOTED_RE = /^\\\"[^\\\"]+\\\"/,\n    exported = {\n        parse: parseType\n    };\n\n\n    function parseType(type) {\n        var mtypeRe = MIME_TYPE_RE,\n            paramRe = MIME_TYPE_PARAMS_RE,\n            quotedRe = QUOTED_RE,\n            paramGlue = \"; \",\n            parameterObject = null;\n            \n        var match, subtype, parameters, name, value, l, defaultType;\n        \n        if (string(type) && mtypeRe.test(type)) {\n            match = type.match(mtypeRe);\n            type = match[1].toLowerCase();\n            subtype = match[2].toLowerCase();\n            parameters = match[3] || '';\n            \n            if (parameters) {\n                parameterObject = {};\n                parameters = parameters.split(';');\n                l = parameters.length;\n                \n                for (; l--;) {\n                    match = parameters[l].match(paramRe);\n                    if (match) {\n                        name = match[1].toLowerCase();\n                        value = match[2];\n                        \n                        // create parameters string\n                        parameters[l] = name + '=' + value;\n                        \n                        // register\n                        parameterObject[name] = quotedRe.test(value) ?\n                                                    value.substring(1,\n                                                                value.length -1) :\n                                                    value;\n                        \n                    }\n                }\n                parameters = parameters.join(paramGlue);\n            }\n            \n            defaultType = type + '/' + subtype;\n            \n            return {\n                string: defaultType +\n                        (parameters ?\n                            paramGlue + parameters : ''),\n                root: defaultType,\n                type: type,\n                subtype: subtype,\n                params: parameterObject\n            };\n        }\n        \n        return void(0);\n    }\n    \nexport { parseType as parse };\n\nexport default exported;\n","'use strict';\n\nimport {\n            string,\n            object,\n            array,\n            date,\n            contains,\n            each as eachProperty\n            \n        } from \"libcore\";\n\nimport {\n            is\n        } from \"libdom\";\n\nvar TYPE_OBJECT = 1,\n    TYPE_ARRAY = 2;\n\n\n\nfunction isForm(form) {\n    return is(form, 1) && form.tagName.toUpperCase() === 'FORM';\n}\n\nfunction isField(field) {\n    if (is(field, 1)) {\n        switch (field.tagName.toUpperCase()) {\n        case 'INPUT':\n        case 'TEXTAREA':\n        case 'BUTTON':\n        case 'SELECT':\n        case 'OUTPUT': return true;\n        }\n    }\n    return false;\n}\n\nfunction eachValues(values, callback, operation) {\n    var typeObject = TYPE_OBJECT,\n        typeArray = TYPE_ARRAY,\n        type = null,\n        each = eachField,\n        isObject = object,\n        isObjectValue = isObject(values);\n        \n    var c, l;\n    \n    if (isForm(values)) {\n        values = values.elements;\n        type = typeArray;\n        isObjectValue = false;\n    }\n    else if (isField(values)) {\n        type = typeArray;\n        values = [values];\n    }\n    else if (isObjectValue) {\n        type = typeObject;\n    }\n    else if (array(values)) {\n        type = typeArray;\n        isObjectValue = false;\n    }\n    \n    if (!isObject(operation)) {\n        operation = {};\n    }\n    \n    if (!contains(operation, 'returnValue')) {\n        operation.returnValue = null;\n    }\n    \n    if (isObjectValue || type === typeArray) {\n        if (isObjectValue) {\n            eachProperty(values, callback, operation, true);\n        }\n        else {\n            for (c = -1, l = values.length; l--;) {\n                each(values[++c], null, callback, operation);\n            }\n        }\n    }\n    \n    return operation.returnValue;\n}\n\nfunction eachField(field, name, callback, operation) {\n    var isString = string,\n        hasName = isString(name),\n        fieldType = 'variant';\n    var type, c, l, list, option;\n    \n    if (isField(field)) {\n        if (!hasName && !isString(name = field.name)) {\n            return;\n        }\n        type = 'field';\n        hasName = true;\n        fieldType = field.type;\n        \n        // field exception by tagname\n        switch (field.tagName.toUpperCase()) {\n        case \"BUTTON\":\n            if (!isString(fieldType)) {\n                fieldType = \"button\";\n            }\n            break;\n\n        case \"SELECT\":\n            type = 'field-options';\n            fieldType = 'select';\n            list = field.options;\n            for (c = -1, l = list.length; l--;) {\n                option = list[++c];\n                // run callback\n                if (option.selected) {\n                    callback(operation,\n                            name,\n                            option.value,\n                            type,\n                            fieldType);\n                }\n            }\n            list = option = null;\n            return;\n        \n        case \"TEXTAREA\":\n            fieldType = \"text\";\n            break;\n        }\n        \n        // field exception by type\n        switch (fieldType) {\n        case \"checkbox\":\n        case \"radio\":\n            if (!field.checked) {\n                return;\n            }\n        }\n        \n    }\n    else {\n        switch (true) {\n        case array(field):\n            type = 'array';\n            break;\n        case date(field):\n            type = 'date';\n            break;\n        default:\n            type = typeof field;\n        }\n    }\n    \n    if (hasName) {\n        callback(operation, name, field, type, fieldType);\n    }\n}\n\nexport\n    function jsonify(raw) {\n        var json = global.JSON,\n            data = null;\n            \n        if (!json) {\n            throw new Error(\"JSON is not supported in this platform\");\n        }\n        try {\n            data = json.stringify(raw);\n        }\n        catch (e) {}\n        return data === 'null' || data === null ? '' : data;\n    }\n\nexport {\n            eachValues as each,\n            isForm as form,\n            isField as field\n        };\n\nexport default {\n                each: eachValues,\n                form: isForm,\n                field: isField,\n                jsonify: jsonify\n            };\n","'use strict';\n\nimport {\n            string,\n            jsonFill\n        } from \"libcore\";\n        \nimport {\n            jsonify,\n            each\n        } from \"./helper.js\";\n\n\nfunction createValue(operation, name, value, type, fieldType) {\n    var items = operation.returnValue,\n        isField = type === \"field\";\n    \n    if (isField) {\n        // i can't support file upload\n        if (fieldType === \"file\") {\n            return;\n        }\n        value = value.value;\n    }\n    \n    if (value === 'number') {\n        value = isFinite(value) ? value.toString(10) : '';\n    }\n    else if (!string(value)) {\n        value = jsonify(value);\n    }\n    \n    // this type of encoding is only available in form fields\n    if ((isField || type === 'field-options')) {\n        \n        // use libcore to fill-in json\n        jsonFill(items, name, value);\n        \n    }\n    else {\n        \n        items[name] = value;\n        \n    }\n    items = value = null;\n\n}\n\nfunction convert(data) {\n    var operation = {\n            index: {},\n            returnValue: {}\n        },\n        body = each(data, createValue, operation);\n    \n    return [null, jsonify(body)];\n}\n\nexport default convert;\n","'use strict';\n\nimport { string } from \"libcore\";\n\nvar json = global.JSON;\n\nif (!json) {\n    json = false;\n}\n\n\nfunction convert(data) {\n    \n    if (!json) {\n        throw new Error(\"JSON is not supported in this platform\");\n    }\n    else if (!string(data)) {\n        return null;\n    }\n    \n    try {\n        data = json.parse(data);\n    }\n    catch (e) {\n        return null;\n    }\n    \n    return [null, data];\n}\n\nexport default convert;","'use strict';\n\nimport {\n            each,\n            jsonify\n        } from \"./helper.js\";\n\nfunction createValue(operation, name, value, type, fieldType) {\n    var items = operation.returnValue;\n    \n    if (type === 'field') {\n        // i can't support file upload\n        if (fieldType === \"file\") {\n            return;\n        }\n        value = value.value;\n    }\n    \n    if (typeof value === 'number') {\n        value = isFinite(value) ? value.toString(10) : '';\n    }\n    else if (typeof value !== 'string') {\n        value = jsonify(value);\n    }\n    \n    // encode\n    items[items.length] = name + '=' + encodeURIComponent(value);\n}\n\n\nfunction convert(data) {\n    var body = each(data, createValue, {\n                    returnValue: []\n                });\n    \n    return [null, body.join('&')];\n}\n\nexport default convert;\n","'use strict';\n\nimport {\n            each,\n            jsonify\n        } from \"./helper.js\";\n\nvar EOL = \"\\r\\n\",\n    BOUNDARY_LENGTH = 48;\n\nfunction createBoundary() {\n    var ender = Math.random().toString().substr(2),\n        output = [],\n        len = 0,\n        total = BOUNDARY_LENGTH - ender.length;\n    \n    for (; total--;) {\n        output[len++] = '-';\n    }\n    output[len++] = ender;\n    return output.join('');\n}\n\nfunction createValue(operation, name, value, type, fieldType) {\n    var eol = EOL,\n        items = operation.returnValue;\n    \n    if (type === 'field') {\n        // i can't support file upload\n        if (fieldType === \"file\") {\n            return;\n        }\n        value = value.value;\n    }\n    \n    if (typeof value === 'number') {\n        value = isFinite(value) ? value.toString(10) : '';\n    }\n    else if (typeof value !== 'string') {\n        value = jsonify(value);\n    }\n    \n    // encode\n    items[items.length] = ([\n                'Content-Disposition: form-data; name=\"' + name + '\"',\n                'Content-type: application/octet-stream',\n                eol,\n                value\n            ]).join(eol);\n    \n}\n\nfunction convert(data) {\n    var eol = EOL,\n        boundary = createBoundary(),\n        body = each(data,\n                    createValue, {\n                        returnValue: []\n                    });\n    // start boundary\n    if (!body.length) {\n        body.splice(0, 0, boundary);\n    }\n    \n    \n    return [\n        // create header\n        ([\n            'Content-Type: multipart/form-data; charset=utf-8;',\n            '    boundary=' + boundary\n        ]).join(eol),\n        \n        // start boundary\n        boundary + eol +\n        \n        body.join(eol + boundary + eol) +\n        \n        // end boundary\n        boundary + '--' + eol\n    ];\n    \n}\n\n\nexport default convert;","'use strict';\n\nimport {\n            array,\n            method,\n            createRegistry\n        } from \"libcore\";\n        \nimport { get as getModule } from \"./chain.js\";\n\nimport { parse } from \"./type.js\";\n\nimport transformRequestJSON from \"./transform/request-json.js\";\n\nimport transformResponseJSON from \"./transform/response-json.js\";\n\nimport transformRequestURLEncode\n            from \"./transform/request-form-urlencoded.js\";\n            \nimport transformRequestFormMultipart\n            from \"./transform/request-form-multipart.js\";\n\nvar TRANSFORMERS = createRegistry(),\n    REQUEST_PREFIX = 'request-',\n    RESPONSE_PREFIX = 'response-',\n    exported = {\n        register: register,\n        transform: transform\n    };\n\nexport\n    function register(type, response, handler) {\n        var transformers = TRANSFORMERS,\n            responsePrefix = RESPONSE_PREFIX;\n        var finalType, current, all;\n        \n        if (method(handler)) {\n            type = parse(type);\n            if (type) {\n                all = response === 'all';\n                response = response === true ? REQUEST_PREFIX : responsePrefix;\n                \n                finalType = response + type.root;\n                current = response + type.string;\n                \n                // register root\n                if (current !== finalType && !transformers.exists(finalType)) {\n                    transformers.set(finalType, handler);\n                }\n                \n                transformers.set(current, handler);\n                \n                // include response\n                if (all) {\n                    transformers.set(responsePrefix + type.string, handler);\n                }\n                \n            }\n        }\n        return getModule();\n    }\n\nexport\n    function transform(type, response, data) {\n        var transformers = TRANSFORMERS;\n        var finalType;\n        \n        type = parse(type);\n        \n        if (type) {\n            response = response === true ? REQUEST_PREFIX : RESPONSE_PREFIX;\n            \n            \n            finalType = response + type.string;\n            if (transformers.exists(finalType)) {\n                return transformers.get(finalType)(data);\n            }\n            \n            // try root\n            finalType = response + type.root;\n            if (transformers.exists(finalType)) {\n                data = transformers.get(finalType)(data);\n                return array(data) ? data : [null, null];\n            }\n            \n        }\n        \n        return [null, data];\n    }\n\nexport default exported;\n\n\n/**\n * add default transformers\n */\n\nregister('application/json', false, transformRequestJSON);\n    register('text/x-json', false, transformRequestJSON);\n    \n// response json\nregister('application/json', true, transformResponseJSON);\nregister('text/x-json', true, transformResponseJSON);\n\n\n// old school requests\nregister('application/x-www-form-urlencoded',\n        false,\n        transformRequestURLEncode);\n\nregister('multipart/form-data',\n    false,\n    transformRequestFormMultipart);\n    \n\n    \n","'use strict';\n\nimport {\n            method as isFunction\n        } from \"libcore\";\n        \n\n\nfunction bind(instance, method) {\n    function bound() {\n        return method.apply(instance, arguments);\n    }\n    return bound;\n}\n\nfunction Driver() {\n    var me = this,\n        list = this.bindMethods,\n        len = list.length,\n        bindMethod = bind;\n    var name;\n    for (; len--;) {\n        name = list[len];\n        me[name] = bindMethod(me, me[name]);\n    }\n}\n\nDriver.prototype = {\n    bindMethods: [\n        'setup',\n        'transport',\n        'process',\n        'success',\n        'error'\n    ],\n    aborted: false,\n    request: null,\n    response: null,\n    \n    constructor: Driver,\n    \n    /* jshint unused:false */\n    onSetup: function (request) {\n        \n    },\n    \n    /* jshint unused:false */\n    onTransport: function (request) {\n        \n    },\n    \n    onCleanup: function (request) {\n        \n    },\n    \n    onSuccess: function (request, status) {\n        \n    },\n    \n    onError: function (status) {\n        \n        \n    },\n    \n    setup: function (request) {\n        var me = this;\n        me.request = request;\n        me.onSetup(request);\n        request.process();\n        me.response = request.response;\n        return request;\n    },\n    \n    /* jshint unused:false */\n    transport: function (request) {\n        var transportPromise;\n        \n        this.onTransport(request);\n        \n        // it's a promise! :-)\n        transportPromise = request.transportPromise;\n        if (transportPromise &&\n            isFunction(transportPromise.then)) {\n            \n            request.begin();\n            \n            return transportPromise;\n        }\n        \n        return Promise.reject(610);\n    },\n    \n    /* jshint unused:false */\n    success: function (status) {\n        var me = this,\n            request = me.request,\n            response = request && request.response;\n        \n        // aborted request or errors\n        if (status === 0 ||\n            (status < 200 && status > 299) ||\n            !request || !response) {\n            \n            return me.error(status);\n        }\n        \n        // process response\n        me.onSuccess(request, status);\n        response.process();\n        \n        // end request and response\n        request.end();\n        response.end();\n        \n        request.transportPromise = null;\n        me.onCleanup(request, response);\n        \n        delete me.request;\n        \n        return response;\n        \n    },\n    \n    error: function (status) {\n        var me = this,\n            request = me.request,\n            response = request && request.response;\n        \n        me.onError(status);\n        \n        // process response\n        if (request) {\n            request.transportPromise = null;\n            \n            me.onCleanup(request);\n            request.end();\n        }\n        \n        // end response\n        if (response) {\n            response.end();\n        }\n        \n        delete me.request;\n        return Promise.reject(status);\n    },\n    \n    abort: function () {\n        //var me = this,\n        //    request = me.request;\n        //\n        //if (!me.aborted) {   \n        //    me.aborted = true;\n        //    \n        //    if (request && LIBCORE.method(request.resolve)) {\n        //        request.resolve(0);\n        //    }\n        //}\n    }\n};\n\nexport default Driver;\n","'use strict';\n\nimport {\n            object,\n            array,\n            each,\n            instantiate,\n            middleware\n        } from \"libcore\";\n\nimport BASE from \"./base.js\";\n\nvar MIDDLEWARE = middleware(\"libdom-http.driver.xhr\"),\n    STATE_UNSENT = 0,\n    STATE_OPENED = 1,\n    STATE_HEADERS_RECEIVED = 2,\n    STATE_LOADING = 3,\n    STATE_DONE = 4,\n    BASE_PROTOTYPE = BASE.prototype;\n\n\nfunction applyHeader(value, name) {\n    /* jshint validthis:true */\n    var me = this;\n    var c, l;\n    if (!array(value)) {\n        value = [value];\n    }\n    for (c = -1, l = value.length; l--;) {\n        me.setRequestHeader(name, value[++c]);\n    }\n}\n\n\nfunction Xhr() {\n    var me = this,\n        args = [me];\n    BASE.apply(me, arguments);\n    \n    MIDDLEWARE.run(\"after:instantiated\", args);\n    \n    args = args[0] = null;\n}\n\n\nXhr.prototype = instantiate(BASE, {\n    level: 1,\n    bindMethods: BASE_PROTOTYPE.bindMethods.concat([\n                    'onReadyStateChange'\n                ]),\n    \n    constructor: Xhr,\n    \n    onReadyStateChange: function () {\n        var me = this,\n            request = me.request,\n            xhr = request.xhrTransport,\n            run = MIDDLEWARE.run,\n            args = [me, request],\n            resolve = request.resolve,\n            reject = request.reject;\n        var status;\n        \n        if (!request.aborted && resolve && reject) {\n            \n            run(\"before:readystatechange\", args);\n            \n            switch (xhr.readyState) {\n            case STATE_UNSENT:\n            case STATE_OPENED:\n            case STATE_HEADERS_RECEIVED: \n            case STATE_LOADING: break;\n            case STATE_DONE:\n                status = xhr.status;\n                if (status < 200 || status > 299) {\n                    reject(status);\n                }\n                else {\n                    resolve(status);\n                }\n            }\n            run(\"after:statechange\", args);\n        }\n        me = xhr = request = args = args[0] = args[1] = null;\n    },\n    \n    createTransportPromise: function(request) {\n        function bind(resolve, reject) {\n            var local = request;\n            local.resolve = resolve;\n            local.reject = reject;\n            local = null;\n        }\n        return new Promise(bind);\n    },\n    \n    onSetup: function (request) {\n        var me = this,\n            args = [me, request],\n            run = MIDDLEWARE.run,\n            xhr = new (global.XMLHttpRequest)();\n            \n        \n        request.xhrTransport = xhr;\n        \n        run(\"before:setup\", args);\n        \n        xhr.onreadystatechange = me.onReadyStateChange;\n        xhr.open(request.method.toUpperCase(), request.getUrl(), true);\n        \n        \n        run(\"after:setup\", args);\n        \n        xhr = args = args[0] = args[1] = null;\n        \n    },\n    \n    onTransport: function (request) {\n        var me = this,\n            xhr = request.xhrTransport,\n            headers = request.headers,\n            args = [me, request];\n       \n        MIDDLEWARE.run(\"before:request\", args);\n       \n        request.transportPromise = me.createTransportPromise(request);\n        \n        \n        \n        // apply headers\n        headers = request.headers;\n        if (object(headers)) {\n            each(headers, applyHeader, xhr);\n        }\n        \n        xhr.send(request.body);\n        \n        MIDDLEWARE.run(\"after:request\", args);\n        \n        \n        xhr = args = args[0] = args[1] = null;\n        \n        \n    },\n    \n    // process success\n    onSuccess: function (request) {\n        var me = this,\n            xhr = request.xhrTransport,\n            response = request.response,\n            args = [me, request],\n            run = MIDDLEWARE.run;\n        \n        response.status = xhr.status;\n        response.statusText = xhr.statusText;\n        response.addHeaders(xhr.getAllResponseHeaders());\n        response.body = xhr.responseText;\n        \n        run(\"after:response\", args);\n        \n        xhr = args = args[0] = args[1] = null;\n        \n    },\n    \n    onCleanup: function (request) {\n        var me = this,\n            xhr = request.xhrTransport;\n        var args;\n        \n        if (xhr) {\n            args = [me, request];\n            MIDDLEWARE.run(\"after:cleanup\", args);\n            args = args[0] = args[1] = \n                    xhr = xhr.onreadystatechange = null;\n        }\n        \n        request.transportPromise = \n            request.resolve =\n            request.reject = \n            request.xhrTransport = xhr = null;\n    }\n\n});\n\n\n\nexport default Xhr;","\"use strict\";\n\nimport {\n            string,\n            array,\n            clear,\n            instantiate\n        } from \"libcore\";\n        \nimport {\n            on,\n            un,\n            dispatch,\n            replace,\n            remove\n        } from \"libdom\";\n\n\nimport {\n            jsonify,\n            each\n        } from \"../transform/helper.js\";\n\nimport BASE from \"./base.js\";\n\nvar BASE_PROTOTYPE = BASE.prototype,\n    RESPONSE_TRIM = /(^<pre>|<\\/pre>$)/ig,\n    FILE_UPLOAD_GEN = 0;\n\nfunction createForm(method, url, contentType, blankDocument) {\n    var doc = global.document,\n        id = 'libdom-http-oldschool-form' + (++FILE_UPLOAD_GEN),\n        div = doc.createElement('div');\n    var iframe;\n        \n    div.style.cssText = ([\n            \"visibility: hidden\",\n            \"position: fixed\",\n            \"top: -10px\",\n            \"left: -10px\",\n            \"overflow: hidden\",\n            \"height: 1px\",\n            \"width: 1px\"\n        ]).join(\";\");\n    \n    div.innerHTML = ([\n            '<form id=\"', id ,'\"',\n                ' method=\"', method.toUpperCase(),'\"',\n                ' action=\"', encodeURI(url),'\"',\n                ' target=\"', id,'-result\"',\n                ' enctype=\"', contentType, '\"',\n                ' encoding=\"', contentType,'\"',\n                ' data-readystate=\"uninitialized\">',\n                '<iframe name=\"', id,'-result\"',\n                    ' id=\"', id, '-result\">',\n                    ' src=\"' + blankDocument + '\">',\n                '</iframe>',\n            '</form>'\n        ]).join(\"\");\n    \n    iframe = div.firstChild.firstChild;\n    \n    on(iframe, 'load', frameFirstOnloadEvent);\n    \n    doc.body.appendChild(div);\n    \n    doc = div = iframe = null;\n    return id;\n}\n\nfunction frameFirstOnloadEvent(event) {\n    var target = event.target,\n        form = target.parentNode;\n        \n    un(target, 'load', frameFirstOnloadEvent);\n    \n    form.setAttribute('data-readystate', 'ready');\n    \n    dispatch(form, 'libdom-http-ready', {});\n    \n    target = form = null;\n}\n\nfunction getForm(id) {\n    return global.document.getElementById(id);\n}\n\nfunction createField(operation, name, value, type, fieldType) {\n    var impostors = operation.impostors,\n        fragment = operation.fragment,\n        isField = type === \"field\",\n        isFile = isField && fieldType === \"file\",\n        input = null;\n    var parent;\n    \n    // include only if it has value\n    if (isFile && value.value) {\n        \n        parent = value.parentNode;\n        if (parent) {\n            input = value.cloneNode();\n            input.disabled = true;\n            input.readOnly = true;\n            impostors[impostors.length] = [value, input];\n            replace(value, input);\n        }\n        input = value;\n        operation.files = true;\n        \n    }\n    else if (!isFile) {\n        \n        if (isField) {\n            value = value.value;\n        }\n        \n        if (value === 'number') {\n            value = isFinite(value) ? value.toString(10) : '';\n        }\n        else if (!string(value)) {\n            value = jsonify(value);\n        }\n        \n        input = fragment.ownerDocument.createElement('input');\n        input.type = \"hidden\";\n        input.name = name;\n        input.value = value;\n        \n    }\n    \n    if (input) {\n        fragment.appendChild(input);\n    }\n    \n    fragment = parent = input = null;\n    \n}\n\nfunction revertImpostors(impostors) {\n    var l, pair, original, impostor, parent;\n    \n    for (l = impostors.length; l--;) {\n        pair = impostors[l];\n        original = pair[0];\n        impostor = pair[1];\n        parent = impostor.parentNode;\n        if (parent) {\n            parent.replaceChild(original, impostor);\n        }\n        parent = pair = pair[0] = pair[1] = original = impostor = null;\n    }\n\n}\n\n    \nfunction FormUpload() {\n    var me = this;\n        \n    BASE.apply(me, arguments);\n\n}\n\n\nFormUpload.prototype = instantiate(BASE, {\n    constructor: FormUpload,\n    \n    blankDocument: 'about:blank',\n    defaultType: 'application/json',\n    \n    bindMethods: BASE_PROTOTYPE.bindMethods.concat([\n                    'onFormReady',\n                    'onFormDeferredSubmit',\n                    'onRespond'\n                ]),\n    \n    createTransportPromise: function (request) {\n        function bind(resolve, reject) {\n            var local = request;\n            local.resolve = resolve;\n            local.reject = reject;\n        }\n        return new Promise(bind);\n    },\n    \n    onFormReady: function () {\n        var me = this,\n            request = me.request,\n            form = request.form;\n\n        // unset event if it was set\n        un(form, 'libdom-http-ready', me.onFormReady);\n        \n        form.enctype = form.encoding = request.contentType;\n        \n        request.deferredSubmit = global.setTimeout(me.onFormDeferredSubmit, 10);\n        \n        form = null;\n        \n        \n    },\n    \n    onFormDeferredSubmit: function () {\n        var me = this,\n            request = me.request,\n            form = request && request.form;\n        \n        if (form) {\n            on(request.iframe, 'load', me.onRespond);\n            form.submit();\n            \n        }\n        else if (request) {\n            request.reject(408);\n        }\n        \n        request = form = null;\n    },\n    \n    onRespond: function () {\n        var me = this,\n            request = me.request,\n            iframe = request.iframe,\n            success = false,\n            docBody = '';\n        \n        un(iframe, 'load', me.onRespond);\n        \n        try {\n            docBody = iframe.contentWindow.document.body.innerHTML;\n            success = true;\n        }\n        catch (e) {}\n\n        if (success) {\n            request.formResponse = docBody.replace(RESPONSE_TRIM, \"\");\n            request.resolve(200);\n        }\n        else {\n            request.reject(406);\n        }\n        \n        iframe = null;\n        \n    },\n    \n    onSetup: function (request) {\n        var me = this,\n            impostors = [],\n            id = createForm(request.method,\n                            request.getUrl(),\n                            request.contentType,\n                            me.blankDocument),\n            form = getForm(id),\n            operation = {\n                impostors: impostors,\n                fragment: global.document.createDocumentFragment(),\n                files: false,\n                driver: me,\n                request: request\n            },\n            currentResponseType = request.responseType;\n            \n        // recreate request\n        each(request.data, createField, operation);\n        \n        // add fields\n        form.appendChild(operation.fragment);\n        request.form = form;\n        request.iframe = form.firstChild;\n        request.impostors = operation.impostors;\n        request.fileUpload = operation.files;\n        \n        // use application.json as default response type\n        if (!string(currentResponseType)) {\n            request.responseType = me.defaultType;\n        }\n        \n        // cleanup operation\n        clear(operation);\n        \n        request.transportPromise = me.createTransportPromise(request);\n        \n        form = null;\n        \n    },\n    \n    onTransport: function (request) {\n        \n        var form = request.form,\n            contentType = 'application/x-www-form-urlencoded';\n        \n        // set proper content-type\n        if (request.fileUpload) {\n            contentType = 'multipart/form-data';\n        }\n        \n        request.addHeaders('Content-type: ' + contentType);\n        \n        if (form.getAttribute('data-readystate') === 'ready') {\n            this.onFormReady();\n        }\n        else {\n            on(form, 'libdom-http-ready', this.onFormReady);\n        }\n        \n    },\n    \n    onSuccess: function (request) {\n        var me = this,\n            response = me.response,\n            responseBody = request.formResponse;\n        \n        if (string(responseBody)) {\n            response.body = responseBody;\n        }\n    },\n    \n    onCleanup: function (request) {\n        var impostors = request.impostors,\n            form = request.form;\n        \n        // return impostors\n        if (array(impostors)) {\n            revertImpostors(impostors);\n        }\n        \n        if (form) {\n            remove(form.parentNode || form);\n        }\n        \n        request.transportPromise = \n            request.resolve =\n            request.reject = \n            request.form = form = null;\n    }\n\n    \n});\n\nexport default FormUpload;\n","'use strict';\n\nimport {\n            string\n        } from \"libcore\";\n        \nimport {\n            jsonify,\n            each\n        } from \"./helper.js\";\n\n\nfunction appendFormData(operation, name, value, type, fieldType) {\n    var formData = operation.returnValue,\n        isString = string;\n    var list, c, l, filename;\n    \n    // don't use parsed name for formData\n    if (type === 'field') {\n        \n        if (fieldType === \"file\") {\n            list = value.files;\n            for (c = -1, l = list.length; l--;) {\n                value = list[++c];\n                filename = value.name;\n\n                if (isString(filename)) {\n                    formData.append(name, value, filename);\n                }\n                else {\n                    formData.append(name, value);\n                }\n            }\n            formData = null;\n            return;\n        }\n        value = value.value;\n    }\n\n        \n    // natives\n    if (typeof value === 'number') {\n        value = isFinite(value) ? value.toString(10) : '';\n    }\n    else if (typeof value !== 'string') {\n        value = jsonify(value);\n    }\n    formData.append(name, value);\n    \n    formData = null;\n}\n\n\nfunction convert(data) {\n    return [null,\n            each(data,\n                appendFormData,\n                {\n                    returnValue: new (global.FormData)()\n                })];\n    \n}\n\n\nexport default convert;","'use strict';\n\nimport {\n            string,\n            number,\n            object,\n            array,\n            contains,\n            each as eachProperty\n        } from \"libcore\";\n        \nvar LINE_SPLIT_RE = /\\r\\n|\\r|\\n/,\n    LINE_PAIR_RE = /^([^ \\r\\n\\t\\s\\:]+)\\:(.+)$/,\n    LINE_EXTENSION_RE = /^([ \\r\\n\\t\\s]+.+|[^\\:]+)$/,\n    LINE_REQUEST_RE =\n        /^([a-z]+)[ \\t\\s]+(\\/[^\\:]+)[ \\t\\s]+(HTTP\\/[0-9]+\\.[0-9]+)$/i,\n    LINE_RESPONSE_RE =\n        /^(HTTP\\/[0-9]+.[0-9]+)[ \\t\\s]+([0-9]+)[ \\t\\s]+([a-z0-9\\-\\_]+)$/i,\n    LINE_TRIM = /^[ \\t\\s]*(.+)[ \\t\\s]*$/,\n    MULTI_VALUE_RE = /Set\\-cookie/i,\n    exported = {\n        each: each,\n        parse: parse,\n        headerName: headerName\n    };\n\n\n\nfunction parseHeaderString(str, callback, scope) {\n    var lines = str.split(LINE_SPLIT_RE),\n        pairRe = LINE_PAIR_RE,\n        extensionRe = LINE_EXTENSION_RE,\n        requestRe = LINE_REQUEST_RE,\n        responseRe = LINE_RESPONSE_RE,\n        trimRe = LINE_TRIM,\n        multivalueRe = MULTI_VALUE_RE,\n        separator = ':',\n        trimReplace = \"$1\",\n        normalize = headerName,\n        l = lines.length,\n        c = -1,\n        headers = {},\n        names = [],\n        nl = 0,\n        name = null;\n    var line, index, value, values, exist;\n    \n    if (typeof scope === 'undefined') {\n        scope = null;\n    }\n        \n    // parse\n    for (; l--;) {\n        line = lines[++c];\n        \n        // header request/response\n        if (!c &&\n            requestRe.test(line) || responseRe.test(line)) {\n            names[nl++] = \"\";\n            headers[\"\"] = line;\n            continue;\n            \n        }\n        \n        // pair\n        if (pairRe.test(line)) {\n            index = line.indexOf(separator);\n            name = line.substring(0, index);\n            value = line.\n                        substring(index + 1, line.length).\n                        replace(trimRe, trimReplace);\n            \n            if (!value) {\n                continue;\n            }\n            \n            // normalize\n            name = normalize(name);\n            \n            \n            exist = contains(headers, name);\n            if (!exist) {\n                names[nl++] = name;\n            }\n            \n            if (multivalueRe.test(name)) {\n                if (!exist) {\n                    headers[name] = [];\n                }\n                values = headers[name];\n                values[values.length] = value;\n            }\n            else {\n                headers[name] = value;\n            }\n            \n        }\n        // continuation\n        else if (name && extensionRe.test(line)) {\n            value = line.replace(trimRe, trimReplace);\n            \n            if (multivalueRe.test(name)) {\n                values = headers[name];\n                values[values.length - 1] += ' ' + value;\n            }\n            else {\n                headers[name] += ' ' + value;\n            }\n            \n        }\n    }\n    \n    // callback\n    for (c = -1, l = names.length; l--;) {\n        name = names[++c];\n        callback.call(scope, name, headers[name]);\n    }\n}\n\n\n\nfunction parseCallback(name, values) {\n    \n    /* jshint validthis:true */\n    this[name] = values;\n}\n\nfunction cleanArrayValues(array) {\n    var isString = string,\n        isNumber = number,\n        l = array.length;\n    var value;\n    \n    for (; l--;) {\n        value = array[l];\n        if (isNumber(value)) {\n            array[l] = value.toString(10);\n        }\n        else if (!isString(value)) {\n            array.splice(l, 1);\n        }\n    }\n    return array;\n}\n\nfunction onEachInput(value, name) {\n    var context = this,\n        callback = context[0],\n        scope = context[1],\n        multivalueRe = MULTI_VALUE_RE;\n    \n    var len;\n    \n    name = headerName(name);\n    \n    if (string(value) || number(value)) {\n        callback.call(scope, name,\n                                multivalueRe.test(name) ?\n                                    [value] : value);\n    }\n    else if (array(value)) {\n        \n        value = cleanArrayValues(value.slice(0));\n        \n        if (!multivalueRe.test(name)) {\n            len = value.length;\n            value = len ? value[len - 1] : '';\n        }\n        \n        if (value.length) {\n            callback.call(scope, name, value);\n        }\n    }\n}\n\nexport \n    function headerName(name) {\n        if (!name) {\n            return '';\n        }\n        \n        return name.charAt(0).toUpperCase() +\n                    name.\n                        substring(1, name.length).\n                        toLowerCase();\n        \n    }\n    \nexport\n    function each(input, callback, scope, current) {\n        \n        // join as string\n        if (array(input)) {\n            input = cleanArrayValues(input.slice(0)).join(\"\\r\\n\");\n        }\n        \n        if (string(input)) {\n            parseHeaderString(input, callback, scope, current);\n            \n        }\n        else if (object(input)) {\n            \n            if (typeof scope === 'undefined') {\n                scope = null;\n            }\n            \n            eachProperty(input,\n                         onEachInput,\n                         [callback,\n                          scope\n                            \n                         ],\n                         true);\n            \n        }\n        else {\n            \n            return false;\n        }\n        \n        return true;\n        \n    }\n    \nexport\n    function parse(headers) {\n        var values = {};\n        return each(headers, parseCallback, values) && values;\n    }\n    \nexport default exported;\n","'use strict';\n\nimport {\n            string,\n            object,\n            assign,\n            contains,\n            clear,\n            instantiate\n        } from \"libcore\";\n        \nimport { destructor as domDestructor } from \"libdom\";\n        \nimport {\n            parse,\n            headerName\n        } from \"./header.js\";\n\nimport {\n            transform\n        } from \"./transform.js\";\n\nvar CLEANING = false,\n    CLEAN_INTERVAL = 1000,\n    TTL = 10000,\n    RUNNING = false,\n    OPERATIONS = [],\n    URL_QUERY_STRING_RE = /^([^\\?\\#]+)(\\?[^\\?\\#]*)?(\\#.*)?$/;\n    \nfunction applyQueryString(url, queryString) {\n    var match = url.match(URL_QUERY_STRING_RE);\n    var query;\n    \n    if (match && string(queryString)) {\n        query = match[2];\n        match[2] = (query ? query + '&' : '?') + queryString;\n        match[3] = match[3] || '';\n        return match.slice(1).join('');\n    }\n    \n    return url;\n}\n\n\n\nfunction onCleanup(force) {\n    var list = OPERATIONS,\n        id = RUNNING;\n    var len, operation, now, ttl, created;\n\n    if (!CLEANING) {\n        CLEANING = true;\n        now = (new Date()).getTime();\n        ttl = TTL;\n        force = force === true;\n        \n        for (len = list.length; len--;) {\n            operation = list[len];\n\n            if (force) {\n                operation.destroy();\n                \n            }\n            else if (!operation.destroyed) {\n                created = operation.createdAt;\n                \n                if (!created || operation.processing) {\n                    operation.createdAt = now;\n                }\n                else if (created + ttl < now) {\n                    operation.destroy();\n                }\n            }\n            \n            if (operation.destroyed) {\n                list.splice(len, 1);\n            }\n        }\n        \n        // unset running interval if no operations left\n        if (!list.length && id) {\n            clearInterval(id);\n            RUNNING = false;\n        }\n        CLEANING = false;\n    }\n}\n\nfunction runCleaner(force) {\n    var id = RUNNING;\n    \n    if (force === true) {\n        if (id) {\n            clearInterval(id);\n            RUNNING = false;\n        }\n        onCleanup(force);\n    }\n    else if (!id) {\n        RUNNING = setInterval(onCleanup, CLEAN_INTERVAL);\n    }\n}\n\nfunction destructor() {\n    runCleaner(true);\n}\n\nfunction Request() {\n    Operation.apply(this, arguments);\n}\n\nfunction Response() {\n    Operation.apply(this, arguments);\n}\n\n\nfunction Operation() {\n    var list = OPERATIONS,\n        me = this;\n    me.destroyed = false;\n    list[list.length] = me;\n    runCleaner();\n}\n\nOperation.prototype = {\n    \n    createdAt: void(0),\n    contentType: 'application/octet-stream',\n    headers: null,\n    body: null,\n    data: null,\n    destroyed: true,\n    processing: false,\n    constructor: Operation,\n    \n    begin: function () {\n        var me = this;\n        if (!me.destroyed && !me.processing) {\n            me.processing = true;\n            delete me.createdAt;\n            runCleaner();\n        }\n        return me;\n    },\n    \n    end: function () {\n        var me = this;\n        if (!me.destroyed && me.processing) {\n            delete me.processing;\n            delete me.createdAt;\n            runCleaner();\n        }\n        return me;\n    },\n    \n    addHeaders: function (headers) {\n        var me = this;\n        var current, contentType;\n            \n        headers = parse(headers);\n        \n        if (headers) {\n            current = me.headers;\n            if (object(current)) {\n                assign(current, headers);\n            }\n            else {\n                me.headers = headers;\n            }\n            \n            // apply content type from headers\n            contentType = me.header('content-type');\n            if (contentType) {\n                me.contentType = contentType;\n            }\n            else {\n                delete me.contenType;\n            }\n            \n        }\n        \n        return this;\n    },\n    \n    header: function (name) {\n        var me = this,\n            current = me.headers;\n        \n        if (string(name) && object(current)) {\n            name = headerName(name);\n            \n            if (contains(current, name)) {\n                return current[name];\n            }\n            \n        }\n        \n        return null;\n    },\n    \n    destroy: function () {\n        var me = this;\n        if (!me.destroyed) {\n            me.destroyed = true;\n            clear(me);\n        }\n        return me;\n    }\n};\n\n\nRequest.prototype = instantiate(Operation, {\n    url: null,\n    method: 'get',\n    constructor: Request,\n    response: null,\n    aborted: false,\n    timeout: 0,\n    config: null,\n    queryTransformer: 'application/x-www-form-urlencoded',\n    queryAllowed: true,\n    allowedPayload: true,\n    \n    getUrl: function () {\n        var me = this,\n            isString = string,\n            url = me.url,\n            query = me.query,\n            data = me.data,\n            transformerType = me.queryTransformer,\n            apply = applyQueryString;\n            \n        \n        if (me.queryAllowed && isString(url) && isString(transformerType)) {\n            // transform url\n            query = transform(transformerType, false, query)[1];\n            if (isString(query)) {\n                url = apply(url, query);\n            }\n            \n            // should include body as query string\n            if (me.allowedPayload === false) {\n                data = transform(transformerType, false, data)[1];\n                \n                if (isString(data)) {\n                    url = apply(url, data);\n                }\n            }\n        }\n        return url;\n    },\n    \n    settings: function (name) {\n        var config = this.config;\n            \n        if (object(config) && contains(config, name)) {\n            return config[name];\n        }\n        return void(0);\n    },\n    \n    process: function () {\n        var me = this,\n            result = transform(me.header('content-type'),\n                               false,\n                               me.data),\n            headers = result[0],\n            responseType = me.responseType,\n            response = me.response;\n        \n        // data will be parsed to create body based on the content type\n        if (headers) {\n            me.addHeaders(headers);\n        }\n        \n        if (me.allowedPayload === false) {\n            delete me.body;\n        }\n        else {\n            me.body = result[1];\n        }\n        \n        // create response\n        if (response) {\n            response.destroy();\n        }\n        \n        me.response = response = new Response();\n        \n        // use response type as resonse contentType\n        if (string(responseType)) {\n            response.addHeaders('Content-type: ' + responseType);\n        }\n        response.request = me;\n        response.begin();\n        \n        result = null;\n    }\n});\n\nResponse.prototype = instantiate(Operation, {\n    constructor: Response,\n    status: 0,\n    statusText: 'Uninitialized',\n    process: function () {\n        var me = this,\n            result = transform(me.header('content-type'),\n                                        true,\n                                        me.body),\n            headers = result[0];\n        \n        // body will be parsed to create data based on the content type\n        if (headers) {\n            me.addHeaders(headers);\n        }\n\n        me.data = result[1];\n        \n    }\n});\n\n\ndomDestructor(destructor);\n\nexport default Request;","'use strict';\n\nimport {\n            string,\n            object,\n            run,\n            createRegistry\n        } from \"libcore\";\n        \nimport { get as getModule } from \"./chain.js\";\n\nimport {\n            exists,\n            use,\n            get\n        } from \"./driver.js\";\n        \nimport OPERATION from \"./operation.js\";\n\nimport {\n            form\n        } from \"./transform/helper.js\";\n\n\nvar DEFAULTS = createRegistry(),\n    METHODS = ['get','post','put','patch','delete','options'],\n    ALLOWED_PAYLOAD = ['post', 'put', 'patch'],\n    exported = {\n        request: request,\n        defaults: defaults\n    };\n    \n\n\nfunction normalizeMethod(method) {\n    if (string(method)) {\n        method = method.toLowerCase();\n        if (METHODS.indexOf(method) !== -1) {\n            return method;\n        }\n    }\n    \n    return DEFAULTS.get('method');\n}\n\nfunction sniffDriver(config) {\n    var driver = config.driver;\n    \n    // call middleware\n    run(\"libdom-http.driver.resolve\", [config, driver]);\n    driver = config.driver;\n    \n    if (string(driver) && exists(driver)) {\n        return driver;\n    }\n    \n    // use default\n    return use();\n    \n}\n\nfunction applyRequestForm(form, requestObject) {\n    var isString = string;\n    var item;\n    \n    // use this as request header only if not default\n    item = form.getAttribute('enctype') || form.getAttribute('encoding');\n    if (isString(item)) {\n        requestObject.addHeaders('Content-type: ' + item);\n    }\n    \n    item = form.action;\n    if (isString(item)) {\n        requestObject.url = item;\n    }\n    \n    item = form.method;\n    if (isString(item)) {\n        requestObject.method = normalizeMethod(item);\n    }\n    \n    item = form.getAttribute('data-driver');\n    if (isString(item)) {\n        requestObject.driver = item;\n    }\n    \n    \n    item = form.getAttribute('data-response-type');\n    if (isString(item)) {\n        requestObject.responseType = item;\n    }\n    \n    requestObject.data = form;\n}\n\nfunction applyRequestConfig(config, requestObject) {\n    var isString = string,\n        undef = void(0);\n    var item;\n    \n    // apply defaults\n    item = config.form || config.data || config.params || config.body;\n    if (help.form(item)) {\n        applyRequestForm(item, requestObject);\n    }\n    else if (item !== null || item !== undef) {\n        requestObject.data = item;\n    }\n    \n    item = config.query || config.urlData || config.urlParams;\n    if (help.form(item) || (item !== null && item !== undef)) {\n        requestObject.query = item;\n    }\n    \n    item = config.url;\n    if (isString(item)) {\n        requestObject.url = item;\n    }\n    \n    item = config.method;\n    if (isString(item)) {\n        requestObject.method = normalizeMethod(item);\n    }\n    \n    item = config.driver;\n    if (isString(item)) {\n        requestObject.driver = item;\n    }\n    \n    item = config.responseType;\n    if (isString(item)) {\n        requestObject.responseType = item;\n    }\n    \n    // add headers\n    requestObject.addHeaders('headers' in config && config.headers);\n    \n    requestObject.config = config;\n    \n    item = null;\n}\n\nexport\n    function request(url, config) {\n        var isString = string,\n            isObject = object,\n            isForm = form,\n            applyConfig = applyRequestConfig,\n            requestObject = new OPERATION(),\n            PROMISE = Promise;\n        var driver, promise;\n        \n        // apply defaults\n        applyConfig(DEFAULTS.clone(), requestObject);\n        \n        // process config\n        if (isString(url)) {\n            \n            if (isObject(config)) {\n                applyConfig(config, requestObject);\n            }\n            else if (isForm(config)) {\n                applyRequestForm(config, requestObject);\n            }\n            \n            requestObject.url = url;\n            \n        }\n        else if (isObject(url)) {\n            applyConfig(url, requestObject);\n        }\n        else if (isForm(url)) {\n            applyRequestForm(url, requestObject);\n        }\n        \n        // decide if body is allowed or not based from methods\n        if (ALLOWED_PAYLOAD.indexOf(requestObject.method) === -1) {\n            requestObject.allowedPayload = false;\n        }\n        \n        \n        // validate\n        if (isString(requestObject.url)) {\n            \n            driver = sniffDriver(requestObject);\n            if (driver) {\n                driver = new (get(driver))(requestObject);\n                requestObject.driver = driver;\n                promise =  PROMISE.resolve(requestObject).\n                                then(driver.setup).\n                                then(driver.transport).\n                                then(driver.success)\n                                [\"catch\"](driver.error);\n                \n                requestObject.api = promise;\n                requestObject = driver = null;\n                return promise;\n            }\n            \n        }\n        \n        return PROMISE.reject(\"Invalid HTTP request configuration.\");\n        \n    }\n\nexport\n    function defaults(name, value) {\n        var all = DEFAULTS;\n        if (arguments.length > 1) {\n            all.set(name, value);\n            return getModule();\n        }\n        \n        return all.get(name);\n        \n    }\n\n\nexport default exported;\n\n\n// set default driver\nuse('xhr');\n\n// set default method\nDEFAULTS.set('method', 'get');\n\n// add default header\nDEFAULTS.set('headers', {\n    'accept': 'application/json,text/x-json,text/plain,*/*;q=0.8',\n    'content-type': 'application/json'\n});\n\n\n\n","export default typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {}\n","'use strict';\n\nimport DOM from \"libdom\";\n\n\nvar ENV = DOM.env,\n    G = global,\n    XHR = G.XMLHttpRequest,\n    support_xhr = !!XHR,\n    support_xhrx = false,\n    support_xhrmime = false,\n    support_xhrtime = false,\n    support_xhrbin = false,\n    support_xhrprogress = false,\n    support_xdr = !!G.XDomainRequest;\n\nif (ENV) {\n    if (ENV.browser) {\n        if (XHR) {\n            XHR = XHR.prototype;\n            support_xhrx = 'withCredentials' in XHR;\n            support_xhrmime = 'overrideMimeType' in XHR;\n            support_xhrtime = 'timeout' in XHR;\n            support_xhrbin = 'sendAsBinary' in XHR;\n            support_xhrprogress = 'onprogress' in XHR;\n        }\n        \n    }\n    else if (ENV.node) {\n        \n    }\n}\n\nexport default {\n        xhr: support_xhr,\n        xhrx: support_xhrx,\n        xhrmime: support_xhrmime,\n        xhrtime: support_xhrtime,\n        xhrbin: support_xhrbin,\n        xhrbytes: support_xhrprogress,\n        xdr: support_xdr,\n        formdata: !!G.FormData,\n        file: !!G.File,\n        blob: !!G.Blob\n    };\n\nG = XHR = null;","'use strict';\n\nimport {\n            number,\n            middleware\n        } from \"libcore\";\n        \nimport {\n            on,\n            un\n        } from \"libdom\";\n\nimport DETECT from \"../detect.js\";\n\nimport XHR from \"./xhr.js\";\n\nvar MIDDLEWARE = middleware(\"libdom-http.driver.xhr\"),\n    register = MIDDLEWARE.register,\n    BEFORE_REQUEST = \"before:request\",\n    PROTOTYPE = XHR.prototype,\n    BINDS = PROTOTYPE.bindMethods,\n    BIND_LENGTH = BINDS.length,\n    PROGRESS = DETECT.xhrbytes,\n    features = 0;\n\n// timeout\nfunction addTimeout(instance, request) {\n    var timeout = request.settings('timeout');\n    \n    if (number(timeout) && timeout > 10) {\n        request.xhrTransport.timeout = timeout;\n    }\n}\n\n// withCredentials\nfunction addWithCredentials(instance, request) {\n\n    if (request.settings('withCredentials') === true) {\n        request.xhrTransport.withCredentials = true;\n    }\n}\n\n// Progress\nfunction onProgress(event) {\n    /* jshint validthis: true */\n    var instance = this,\n        request = instance.request,\n        api = request.api;\n    var loaded;\n    \n    if (request && event.lengthComputable) {\n        loaded = event.loaded / event.total;\n        \n        request.percentLoaded = loaded;\n        if (api) {\n            api.percentLoaded = loaded;\n        }\n    }\n\n}\n\nfunction addProgressEvent(instance, request) {\n    var api = request.api;\n    \n    api.percentLoaded = 0;\n    \n    if (request) {\n        request.percentLoaded = 0;\n    }\n    \n    on(request.xhrTransport, 'progress', instance.onProgress);\n}\n\n// cleanup\nfunction cleanup(instance, request) {\n    if (PROGRESS) {\n        un(request.xhrTransport, 'progress', instance.onProgress);\n    }\n}\n\n\nfunction processFormData(instance, request) {\n\n    // remove content type and use FormData defaults\n    if (request.body instanceof global.FormData) {\n        delete request.headers['Content-type'];\n    }\n\n}\n\n\n\n// apply middlewares according to capability of the platform\nif (DETECT.xhrx) {\n    features++;\n    register(BEFORE_REQUEST, addWithCredentials);\n}\n\n// form data fixes\nif (DETECT.formdata) {\n    features++;\n    register(BEFORE_REQUEST, processFormData);\n}\n\n// progress\nif (PROGRESS) {\n    features++;\n    BINDS[BIND_LENGTH++] = 'onProgress';\n    PROTOTYPE.onProgress = onProgress;\n    register(BEFORE_REQUEST, addProgressEvent);\n}\n\n// timeout\nif (DETECT.xhrtime) {\n    register(BEFORE_REQUEST, addTimeout);\n}\n\n\n\n// cleanup\nif (features) {\n    if (features > 2) {\n        PROTOTYPE.level = 2;\n    }\n    register(\"cleanup\", cleanup);\n}\n\n\nexport default XHR;","'use strict';\n\nimport { env } from \"libcore\";\n\nimport DETECT from \"./lib/detect.js\";\n\nimport DRIVER,\n        {\n            register as driverRegister,\n            use\n        } from \"./lib/driver.js\";\n\nimport TRANSFORMER,\n        {\n            register as transformRegister,\n            transform\n        } from \"./lib/transform.js\";\n\n\nimport xhrDriver from \"./lib/driver/xhr.js\";\nimport xhrDriver2 from \"./lib/driver/xhr2.js\";\n\nimport formUploadDriver from './lib/driver/form-upload.js';\n\nimport transformTextResponseDriver\n            from \"./lib/transform/response-text-plain.js\";\n            \nimport transformFormDataRequestDriver\n            from \"./lib/transform/request-html5-form-data.js\";\n\n\nif (!global.libdom) {\n    throw new Error(\"libdom package is not found! unable to load http module\");\n}\n\n\n\nif (DETECT.xhr) {\n    driverRegister('xhr', xhrDriver);\n    \n    driverRegister('xhr2', xhrDriver2);\n}\n\n// file upload drivers\nif (env && env.browser) {\n    driverRegister('form-upload',\n        DETECT.xhr && DETECT.file && DETECT.blob ?\n            // form data\n            xhrDriver2 :\n            \n            // old school iframe\n            formUploadDriver);\n}\n\n// Transform Drivers\ntransformRegister('text/plain',\n    true,\n    transformTextResponseDriver);\n\n\nif (DETECT.formdata) {\n    \n    // use html5 form data request\n    transformRegister('multipart/form-data',\n        false,\n        transformFormDataRequestDriver);\n}\n\n\n\n        \n        \nexport {\n            use,\n            driverRegister as driver,\n            \n            transform,\n            transformRegister as transformer\n        };\n        \nexport {\n            request,\n            defaults\n        } from \"./lib/request.js\";\n\n\nexport {\n            parse as parseHeader,\n            each as eachHeader\n        } from \"./lib/header.js\";\n","'use strict';\n\nimport {\n            number,\n            string\n        } from \"libcore\";\n\nfunction convert(data) {\n    \n    if (number(data)) {\n        data = data.toString(10);\n    }\n    \n    return ['Content-type: text/plain',\n            string(data) ?\n                data : ''];\n}\n\n\nexport default convert;","'use strict';\n\n\nimport { use } from \"./lib/chain.js\";\n\nimport * as moduleApi from \"./all.js\";\n\nuse(moduleApi);\n\nexport * from \"./all.js\";\n\nexport default moduleApi;\n"],"names":["get","MAIN_MODULE","register","name","Class","string","method","DRIVERS","set","prototype","type","DEFAULT","getModule","exists","use","arguments","length","parseType","match","subtype","parameters","value","l","defaultType","mtypeRe","MIME_TYPE_RE","paramRe","MIME_TYPE_PARAMS_RE","quotedRe","QUOTED_RE","parameterObject","test","toLowerCase","split","substring","join","root","params","isForm","form","is","tagName","toUpperCase","isField","field","eachValues","values","callback","operation","c","typeObject","TYPE_OBJECT","typeArray","TYPE_ARRAY","each","eachField","isObject","object","isObjectValue","elements","array","contains","returnValue","eachProperty","list","option","isString","hasName","fieldType","options","selected","checked","date","jsonify","raw","json","global","JSON","data","Error","stringify","e","createValue","items","isFinite","toString","jsonFill","convert","index","parse","encodeURIComponent","createBoundary","ender","Math","random","substr","output","len","total","BOUNDARY_LENGTH","eol","EOL","response","handler","finalType","current","all","transformers","TRANSFORMERS","responsePrefix","RESPONSE_PREFIX","REQUEST_PREFIX","transform","bind","instance","apply","Driver","me","this","bindMethods","bindMethod","applyHeader","setRequestHeader","Xhr","args","BASE","MIDDLEWARE","run","createForm","url","contentType","blankDocument","iframe","doc","document","id","FILE_UPLOAD_GEN","div","createElement","style","cssText","innerHTML","encodeURI","firstChild","on","frameFirstOnloadEvent","body","appendChild","event","target","parentNode","un","setAttribute","dispatch","getForm","getElementById","createField","impostors","fragment","isFile","input","cloneNode","disabled","readOnly","replace","files","ownerDocument","revertImpostors","pair","original","impostor","parent","replaceChild","FormUpload","appendFormData","filename","formData","append","parseHeaderString","str","scope","line","exist","lines","LINE_SPLIT_RE","pairRe","LINE_PAIR_RE","extensionRe","LINE_EXTENSION_RE","requestRe","LINE_REQUEST_RE","responseRe","LINE_RESPONSE_RE","trimRe","LINE_TRIM","multivalueRe","MULTI_VALUE_RE","normalize","headerName","headers","names","nl","indexOf","call","parseCallback","cleanArrayValues","isNumber","number","splice","onEachInput","context","slice","charAt","applyQueryString","queryString","query","URL_QUERY_STRING_RE","onCleanup","force","now","ttl","created","OPERATIONS","RUNNING","CLEANING","Date","getTime","TTL","destroy","destroyed","createdAt","processing","clearInterval","runCleaner","setInterval","CLEAN_INTERVAL","Request","Operation","Response","normalizeMethod","METHODS","DEFAULTS","sniffDriver","config","driver","applyRequestForm","requestObject","item","getAttribute","addHeaders","action","responseType","applyRequestConfig","help","urlData","urlParams","request","promise","applyConfig","OPERATION","PROMISE","Promise","clone","ALLOWED_PAYLOAD","allowedPayload","resolve","then","setup","transport","success","error","api","reject","defaults","self","window","ENV","DOM","env","G","XHR","XMLHttpRequest","support_xhr","support_xhrx","support_xhrmime","support_xhrtime","support_xhrbin","support_xhrprogress","support_xdr","XDomainRequest","browser","node","xhr","xhrx","xhrmime","xhrtime","xhrbin","xhrbytes","xdr","formdata","FormData","file","File","blob","Blob","createRegistry","transformRequestJSON","transformResponseJSON","boundary","aborted","constructor","onSetup","onTransport","onSuccess","status","onError","process","transportPromise","isFunction","begin","end","abort","middleware","BASE_PROTOTYPE","instantiate","level","concat","onReadyStateChange","xhrTransport","readyState","createTransportPromise","local","onreadystatechange","open","getUrl","send","statusText","getAllResponseHeaders","responseText","PROTOTYPE","BINDS","BIND_LENGTH","PROGRESS","DETECT","features","settings","withCredentials","onProgress","loaded","lengthComputable","percentLoaded","timeout","RESPONSE_TRIM","onFormReady","enctype","encoding","deferredSubmit","setTimeout","onFormDeferredSubmit","onRespond","submit","docBody","contentWindow","formResponse","createDocumentFragment","currentResponseType","fileUpload","clear","responseBody","remove","assign","header","contenType","queryTransformer","queryAllowed","transformerType","result","domDestructor","accept","content-type","libdom","driverRegister","xhrDriver","xhrDriver2","formUploadDriver","transformRegister","mainModule","moduleApi"],"mappings":"gRASA,SACaA,IACL,OAAOC,ECYf,SACaC,EAASC,EAAMC,GAWpB,OATIC,SAAOF,IAASG,SAAOF,KACvBG,GAAQC,IAAIL,EAAMC,GAClBA,EAAMK,UAAUC,KAAOP,EAElBQ,KACDA,GAAUR,IAIXS,IAEf,SACaC,EAAOV,GACZ,OAAOI,GAAQM,OAAOV,GAG9B,SACaW,EAAIX,GAIT,OAHIY,UAAUC,OAAS,GAAKH,EAAOV,KAC/BQ,GAAUR,GAEPQ,GAMf,SACaX,EAAIU,GACT,OAAOH,GAAQP,IAAIU,GCxCvB,SAASO,EAAUP,GACf,IAMIQ,EAAOC,EAASC,EAAYjB,EAAMkB,EAAOC,EAAGC,EAN5CC,EAAUC,GACVC,EAAUC,GACVC,EAAWC,GAEXC,EAAkB,KAItB,GAAIzB,SAAOK,IAASc,EAAQO,KAAKrB,GAAO,CAMpC,GALAQ,EAAQR,EAAKQ,MAAMM,GACnBd,EAAOQ,EAAM,GAAGc,cAChBb,EAAUD,EAAM,GAAGc,cACnBZ,EAAaF,EAAM,IAAM,GAET,CAKZ,IAJAY,KAEAR,GADAF,EAAaA,EAAWa,MAAM,MACfjB,OAERM,MACHJ,EAAQE,EAAWE,GAAGJ,MAAMQ,MAExBvB,EAAOe,EAAM,GAAGc,cAChBX,EAAQH,EAAM,GAGdE,EAAWE,GAAKnB,EAAO,IAAMkB,EAG7BS,EAAgB3B,GAAQyB,EAASG,KAAKV,GACVA,EAAMa,UAAU,EACJb,EAAML,OAAQ,GAC1BK,GAIpCD,EAAaA,EAAWe,KAjChB,MAsCZ,OAFAZ,EAAcb,EAAO,IAAMS,GAGvBd,OAAQkB,GACCH,EAxCD,KAyCgBA,EAAa,IACrCgB,KAAMb,EACNb,KAAMA,EACNS,QAASA,EACTkB,OAAQP,IC3CxB,SAASQ,EAAOC,GACZ,OAAOC,KAAGD,EAAM,IAAqC,SAA/BA,EAAKE,QAAQC,cAGvC,SAASC,EAAQC,GACb,GAAIJ,KAAGI,EAAO,GACV,OAAQA,EAAMH,QAAQC,eACtB,IAAK,QACL,IAAK,WACL,IAAK,SACL,IAAK,SACL,IAAK,SAAU,OAAO,EAG1B,OAAO,EAGX,SAASG,EAAWC,EAAQC,EAAUC,GAClC,IAOIC,EAAG3B,EAPH4B,EAAaC,GACbC,EAAYC,GACZ3C,EAAO,KACP4C,EAAOC,EACPC,EAAWC,SACXC,EAAgBF,EAASV,GA6B7B,GAzBIR,EAAOQ,IACPA,EAASA,EAAOa,SAChBjD,EAAO0C,EACPM,GAAgB,GAEXf,EAAQG,IACbpC,EAAO0C,EACPN,GAAUA,IAELY,EACLhD,EAAOwC,EAEFU,QAAMd,KACXpC,EAAO0C,EACPM,GAAgB,GAGfF,EAASR,KACVA,MAGCa,WAASb,EAAW,iBACrBA,EAAUc,YAAc,MAGxBJ,GAAiBhD,IAAS0C,EAC1B,GAAIM,EACAK,OAAajB,EAAQC,EAAUC,GAAW,QAG1C,IAAKC,GAAK,EAAG3B,EAAIwB,EAAO9B,OAAQM,KAC5BgC,EAAKR,IAASG,GAAI,KAAMF,EAAUC,GAK9C,OAAOA,EAAUc,YAGrB,SAASP,EAAUX,EAAOzC,EAAM4C,EAAUC,GACtC,IAGItC,EAAMuC,EAAG3B,EAAG0C,EAAMC,EAHlBC,EAAW7D,SACX8D,EAAUD,EAAS/D,GACnBiE,EAAY,UAGhB,GAAIzB,EAAQC,GAAQ,CAChB,IAAKuB,IAAYD,EAAS/D,EAAOyC,EAAMzC,MACnC,OAOJ,OALAO,EAAO,QACPyD,GAAU,EACVC,EAAYxB,EAAMlC,KAGVkC,EAAMH,QAAQC,eACtB,IAAK,SACIwB,EAASE,KACVA,EAAY,UAEhB,MAEJ,IAAK,SAID,IAHA1D,EAAO,gBACP0D,EAAY,SAEPnB,GAAK,EAAG3B,GADb0C,EAAOpB,EAAMyB,SACSrD,OAAQM,MAC1B2C,EAASD,IAAOf,IAELqB,UACPvB,EAASC,EACD7C,EACA8D,EAAO5C,MACPX,EACA0D,GAIhB,YADAJ,EAAOC,EAAS,MAGpB,IAAK,WACDG,EAAY,OAKhB,OAAQA,GACR,IAAK,WACL,IAAK,QACD,IAAKxB,EAAM2B,QACP,aAMR,QAAQ,GACR,KAAKX,QAAMhB,GACPlC,EAAO,QACP,MACJ,KAAK8D,OAAK5B,GACNlC,EAAO,OACP,MACJ,QACIA,SAAckC,EAIlBuB,GACApB,EAASC,EAAW7C,EAAMyC,EAAOlC,EAAM0D,GAI/C,SACaK,EAAQC,GACb,IAAIC,EAAOC,GAAOC,KACdC,EAAO,KAEX,IAAKH,EACD,MAAM,IAAII,MAAM,0CAEpB,IACID,EAAOH,EAAKK,UAAUN,GAE1B,MAAOO,IACP,MAAgB,SAATH,GAA4B,OAATA,EAAgB,GAAKA,EC/JvD,SAASI,EAAYlC,EAAW7C,EAAMkB,EAAOX,EAAM0D,GAC/C,IAAIe,EAAQnC,EAAUc,YAClBnB,EAAmB,UAATjC,EAEd,GAAIiC,EAAS,CAET,GAAkB,SAAdyB,EACA,OAEJ/C,EAAQA,EAAMA,MAGJ,WAAVA,EACAA,EAAQ+D,SAAS/D,GAASA,EAAMgE,SAAS,IAAM,GAEzChF,SAAOgB,KACbA,EAAQoD,EAAQpD,IAIfsB,GAAoB,kBAATjC,EAGZ4E,WAASH,EAAOhF,EAAMkB,GAKtB8D,EAAMhF,GAAQkB,EAGlB8D,EAAQ9D,EAAQ,KAIpB,SAASkE,EAAQT,GAOb,OAAQ,KAAML,EAFHnB,EAAKwB,EAAMI,GAHdM,SACA1B,mBCxCZ,SAASyB,EAAQT,GAEb,IAAKH,GACD,MAAM,IAAII,MAAM,0CAEf,IAAK1E,SAAOyE,GACb,OAAO,KAGX,IACIA,EAAOH,GAAKc,MAAMX,GAEtB,MAAOG,GACH,OAAO,KAGX,OAAQ,KAAMH,GCpBlB,SAASI,EAAYlC,EAAW7C,EAAMkB,EAAOX,EAAM0D,GAC/C,IAAIe,EAAQnC,EAAUc,YAEtB,GAAa,UAATpD,EAAkB,CAElB,GAAkB,SAAd0D,EACA,OAEJ/C,EAAQA,EAAMA,MAGG,iBAAVA,EACPA,EAAQ+D,SAAS/D,GAASA,EAAMgE,SAAS,IAAM,GAEzB,iBAAVhE,IACZA,EAAQoD,EAAQpD,IAIpB8D,EAAMA,EAAMnE,QAAUb,EAAO,IAAMuF,mBAAmBrE,GChB1D,SAASsE,IAML,IALA,IAAIC,EAAQC,KAAKC,SAAST,WAAWU,OAAO,GACxCC,KACAC,EAAM,EACNC,EAAQC,GAAkBP,EAAM5E,OAE7BkF,KACHF,EAAOC,KAAS,IAGpB,OADAD,EAAOC,KAASL,EACTI,EAAO7D,KAAK,IAGvB,SAAS+C,EAAYlC,EAAW7C,EAAMkB,EAAOX,EAAM0D,GAC/C,IAAIgC,EAAMC,GACNlB,EAAQnC,EAAUc,YAEtB,GAAa,UAATpD,EAAkB,CAElB,GAAkB,SAAd0D,EACA,OAEJ/C,EAAQA,EAAMA,MAGG,iBAAVA,EACPA,EAAQ+D,SAAS/D,GAASA,EAAMgE,SAAS,IAAM,GAEzB,iBAAVhE,IACZA,EAAQoD,EAAQpD,IAIpB8D,EAAMA,EAAMnE,SACA,yCAA2Cb,EAAO,IAClD,yCACAiG,EACA/E,GACDc,KAAKiE,GClBpB,SACalG,EAASQ,EAAM4F,EAAUC,GAC9B,IAEIC,EAAWC,EAASC,EAFpBC,EAAeC,GACfC,EAAiBC,GA0BrB,OAvBIxG,SAAOiG,KACP7F,EAAO+E,EAAM/E,MAETgG,EAAmB,QAAbJ,EAGNE,GAFAF,GAAwB,IAAbA,EAAoBS,GAAiBF,GAEzBnG,EAAK0B,MAC5BqE,EAAUH,EAAW5F,EAAKL,UAGVmG,GAAcG,EAAa9F,OAAO2F,IAC9CG,EAAanG,IAAIgG,EAAWD,GAGhCI,EAAanG,IAAIiG,EAASF,GAGtBG,GACAC,EAAanG,IAAIqG,EAAiBnG,EAAKL,OAAQkG,IAKpD3F,IAGf,SACaoG,EAAUtG,EAAM4F,EAAUxB,GAC/B,IACI0B,EADAG,EAAeC,GAKnB,GAFAlG,EAAO+E,EAAM/E,GAEH,CAKN,GAJA4F,GAAwB,IAAbA,EAAoBS,GAAiBD,GAGhDN,EAAYF,EAAW5F,EAAKL,OACxBsG,EAAa9F,OAAO2F,GACpB,OAAOG,EAAa3G,IAAIwG,GAAW1B,GAKvC,GADA0B,EAAYF,EAAW5F,EAAK0B,KACxBuE,EAAa9F,OAAO2F,GAEpB,OADA1B,EAAO6B,EAAa3G,IAAIwG,GAAW1B,GAC5BlB,QAAMkB,GAAQA,GAAQ,KAAM,MAK3C,OAAQ,KAAMA,GC/EtB,SAASmC,EAAKC,EAAU5G,GAIpB,OAHA,WACI,OAAOA,EAAO6G,MAAMD,EAAUnG,YAKtC,SAASqG,IAML,IALA,IAIIjH,EAJAkH,EAAKC,KACLtD,EAAOsD,KAAKC,YACZtB,EAAMjC,EAAKhD,OACXwG,EAAaP,EAEVhB,KAEHoB,EADAlH,EAAO6D,EAAKiC,IACDuB,EAAWH,EAAIA,EAAGlH,ICFrC,SAASsH,EAAYpG,EAAOlB,GAExB,IACI8C,EAAG3B,EADH+F,EAAKC,KAKT,IAHK1D,QAAMvC,KACPA,GAASA,IAER4B,GAAK,EAAG3B,EAAID,EAAML,OAAQM,KAC3B+F,EAAGK,iBAAiBvH,EAAMkB,IAAQ4B,IAK1C,SAAS0E,IACL,IAAIN,EAAKC,KACLM,GAAQP,GACZQ,EAAKV,MAAME,EAAItG,WAEf+G,GAAWC,IAAI,qBAAsBH,GAErCA,EAAOA,EAAK,GAAK,KCZrB,SAASI,EAAW1H,EAAQ2H,EAAKC,EAAaC,GAC1C,IAGIC,EAHAC,EAAMzD,GAAO0D,SACbC,EAAK,gCAAkCC,GACvCC,EAAMJ,EAAIK,cAAc,OAmC5B,OAhCAD,EAAIE,MAAMC,SACF,qBACA,kBACA,aACA,cACA,mBACA,cACA,cACDzG,KAAK,KAEZsG,EAAII,WACI,aAAcN,EAAI,IACd,YAAajI,EAAOoC,cAAc,IAClC,YAAaoG,UAAUb,GAAK,IAC5B,YAAaM,EAAG,WAChB,aAAcL,EAAa,IAC3B,cAAeA,EAAY,IAC3B,oCACA,iBAAkBK,EAAG,WACjB,QAASA,EAAI,YACb,SAAWJ,EAAgB,KAC/B,YACJ,WACDhG,KAAK,IAEZiG,EAASK,EAAIM,WAAWA,WAExBC,KAAGZ,EAAQ,OAAQa,GAEnBZ,EAAIa,KAAKC,YAAYV,GAErBJ,EAAMI,EAAML,EAAS,KACdG,EAGX,SAASU,EAAsBG,GAC3B,IAAIC,EAASD,EAAMC,OACf9G,EAAO8G,EAAOC,WAElBC,KAAGF,EAAQ,OAAQJ,GAEnB1G,EAAKiH,aAAa,kBAAmB,SAErCC,WAASlH,EAAM,wBAEf8G,EAAS9G,EAAO,KAGpB,SAASmH,EAAQnB,GACb,OAAO3D,GAAO0D,SAASqB,eAAepB,GAG1C,SAASqB,EAAY5G,EAAW7C,EAAMkB,EAAOX,EAAM0D,GAC/C,IAAIyF,EAAY7G,EAAU6G,UACtBC,EAAW9G,EAAU8G,SACrBnH,EAAmB,UAATjC,EACVqJ,EAASpH,GAAyB,SAAdyB,EACpB4F,EAAQ,KAIRD,GAAU1I,EAAMA,OAEPA,EAAMiI,cAEXU,EAAQ3I,EAAM4I,aACRC,UAAW,EACjBF,EAAMG,UAAW,EACjBN,EAAUA,EAAU7I,SAAWK,EAAO2I,GACtCI,UAAQ/I,EAAO2I,IAEnBA,EAAQ3I,EACR2B,EAAUqH,OAAQ,GAGZN,IAEFpH,IACAtB,EAAQA,EAAMA,OAGJ,WAAVA,EACAA,EAAQ+D,SAAS/D,GAASA,EAAMgE,SAAS,IAAM,GAEzChF,SAAOgB,KACbA,EAAQoD,EAAQpD,KAGpB2I,EAAQF,EAASQ,cAAc5B,cAAc,UACvChI,KAAO,SACbsJ,EAAM7J,KAAOA,EACb6J,EAAM3I,MAAQA,GAId2I,GACAF,EAASX,YAAYa,GAGzBF,EAAoBE,EAAQ,KAIhC,SAASO,EAAgBV,GACrB,IAAIvI,EAAGkJ,EAAMC,EAAUC,EAAUC,EAEjC,IAAKrJ,EAAIuI,EAAU7I,OAAQM,KAEvBmJ,GADAD,EAAOX,EAAUvI,IACD,IAEhBqJ,GADAD,EAAWF,EAAK,IACElB,aAEdqB,EAAOC,aAAaH,EAAUC,GAElCC,EAASH,EAAOA,EAAK,GAAKA,EAAK,GAAKC,EAAWC,EAAW,KAMlE,SAASG,IACL,IAAIxD,EAAKC,KAETO,EAAKV,MAAME,EAAItG,WClJnB,SAAS+J,EAAe9H,EAAW7C,EAAMkB,EAAOX,EAAM0D,GAClD,IAEIJ,EAAMf,EAAG3B,EAAGyJ,EAFZC,EAAWhI,EAAUc,YACrBI,EAAW7D,SAIf,GAAa,UAATK,EAAkB,CAElB,GAAkB,SAAd0D,EAAsB,CAEtB,IAAKnB,GAAK,EAAG3B,GADb0C,EAAO3C,EAAMgJ,OACSrJ,OAAQM,KAItB4C,EAFJ6G,GADA1J,EAAQ2C,IAAOf,IACE9C,MAGb6K,EAASC,OAAO9K,EAAMkB,EAAO0J,GAG7BC,EAASC,OAAO9K,EAAMkB,GAI9B,YADA2J,EAAW,MAGf3J,EAAQA,EAAMA,MAKG,iBAAVA,EACPA,EAAQ+D,SAAS/D,GAASA,EAAMgE,SAAS,IAAM,GAEzB,iBAAVhE,IACZA,EAAQoD,EAAQpD,IAEpB2J,EAASC,OAAO9K,EAAMkB,GAEtB2J,EAAW,KCrBf,SAASE,EAAkBC,EAAKpI,EAAUqI,GACtC,IAgBIC,EAAM7F,EAAOnE,EAAOyB,EAAQwI,EAhB5BC,EAAQJ,EAAIlJ,MAAMuJ,IAClBC,EAASC,GACTC,EAAcC,GACdC,EAAYC,GACZC,EAAaC,GACbC,EAASC,GACTC,EAAeC,GAGfC,EAAYC,EACZhL,EAAIiK,EAAMvK,OACViC,GAAK,EACLsJ,KACAC,KACAC,EAAK,EACLtM,EAAO,KAQX,SALqB,IAAViL,IACPA,EAAQ,MAIL9J,KAIH,GAHA+J,EAAOE,IAAQtI,IAGVA,GACD4I,EAAU9J,KAAKsJ,IAASU,EAAWhK,KAAKsJ,GACxCmB,EAAMC,KAAQ,GACdF,EAAQ,IAAMlB,OAMlB,GAAII,EAAO1J,KAAKsJ,GAAO,CAOnB,GANA7F,EAAQ6F,EAAKqB,QA9BL,KA+BRvM,EAAOkL,EAAKnJ,UAAU,EAAGsD,KACzBnE,EAAQgK,EACInJ,UAAUsD,EAAQ,EAAG6F,EAAKrK,QAC1BoJ,QAAQ6B,EAjCV,OAoCN,SAIJ9L,EAAOkM,EAAUlM,IAGjBmL,EAAQzH,WAAS0I,EAASpM,MAEtBqM,EAAMC,KAAQtM,GAGdgM,EAAapK,KAAK5B,IACbmL,IACDiB,EAAQpM,QAEZ2C,EAASyJ,EAAQpM,IACV2C,EAAO9B,QAAUK,GAGxBkL,EAAQpM,GAAQkB,OAKflB,GAAQwL,EAAY5J,KAAKsJ,KAC9BhK,EAAQgK,EAAKjB,QAAQ6B,EA9DX,MAgENE,EAAapK,KAAK5B,IAClB2C,EAASyJ,EAAQpM,IACV2C,EAAO9B,OAAS,IAAM,IAAMK,EAGnCkL,EAAQpM,IAAS,IAAMkB,GAOnC,IAAK4B,GAAK,EAAG3B,EAAIkL,EAAMxL,OAAQM,KAC3BnB,EAAOqM,IAAQvJ,GACfF,EAAS4J,KAAKvB,EAAOjL,EAAMoM,EAAQpM,IAM3C,SAASyM,EAAczM,EAAM2C,GAGzBwE,KAAKnH,GAAQ2C,EAGjB,SAAS+J,EAAiBjJ,GAMtB,IALA,IAGIvC,EAHA6C,EAAW7D,SACXyM,EAAWC,SACXzL,EAAIsC,EAAM5C,OAGPM,KAECwL,EADJzL,EAAQuC,EAAMtC,IAEVsC,EAAMtC,GAAKD,EAAMgE,SAAS,IAEpBnB,EAAS7C,IACfuC,EAAMoJ,OAAO1L,EAAG,GAGxB,OAAOsC,EAGX,SAASqJ,EAAY5L,EAAOlB,GACxB,IAKI8F,EALAiH,EAAU5F,KACVvE,EAAWmK,EAAQ,GACnB9B,EAAQ8B,EAAQ,GAChBf,EAAeC,GAInBjM,EAAOmM,EAAWnM,GAEdE,SAAOgB,IAAU0L,SAAO1L,GACxB0B,EAAS4J,KAAKvB,EAAOjL,EACGgM,EAAapK,KAAK5B,IACbkB,GAASA,GAEjCuC,QAAMvC,KAEXA,EAAQwL,EAAiBxL,EAAM8L,MAAM,IAEhChB,EAAapK,KAAK5B,KAEnBkB,GADA4E,EAAM5E,EAAML,QACEK,EAAM4E,EAAM,GAAK,IAG/B5E,EAAML,QACN+B,EAAS4J,KAAKvB,EAAOjL,EAAMkB,IAKvC,SACaiL,EAAWnM,GAChB,OAAKA,EAIEA,EAAKiN,OAAO,GAAG1K,cACVvC,EACI+B,UAAU,EAAG/B,EAAKa,QAClBgB,cANL,GAUnB,SACasB,EAAK0G,EAAOjH,EAAUqI,EAAO3E,GAOlC,GAJI7C,QAAMoG,KACNA,EAAQ6C,EAAiB7C,EAAMmD,MAAM,IAAIhL,KAAK,SAG9C9B,SAAO2J,GACPkB,EAAkBlB,EAAOjH,EAAUqI,EAAO3E,OAGzC,CAAA,IAAIhD,SAAOuG,GAiBZ,OAAO,OAfc,IAAVoB,IACPA,EAAQ,MAGZrH,OAAaiG,EACAiD,GACClK,EACAqI,IAGD,GAQjB,OAAO,EAIf,SACa3F,EAAM8G,GACX,IAAIzJ,KACJ,OAAOQ,EAAKiJ,EAASK,EAAe9J,IAAWA,ECtMvD,SAASuK,EAAiBpF,EAAKqF,GAC3B,IACIC,EADArM,EAAQ+G,EAAI/G,MAAMsM,IAGtB,OAAItM,GAASb,SAAOiN,IAChBC,EAAQrM,EAAM,GACdA,EAAM,IAAMqM,EAAQA,EAAQ,IAAM,KAAOD,EACzCpM,EAAM,GAAKA,EAAM,IAAM,GAChBA,EAAMiM,MAAM,GAAGhL,KAAK,KAGxB8F,EAKX,SAASwF,EAAUC,GACf,IAEIzH,EAAKjD,EAAW2K,EAAKC,EAAKC,EAF1B7J,EAAO8J,GACPvF,EAAKwF,GAGT,IAAKC,GAAU,CAMX,IALAA,IAAW,EACXL,GAAM,IAAKM,MAAQC,UACnBN,EAAMO,GACNT,GAAkB,IAAVA,EAEHzH,EAAMjC,EAAKhD,OAAQiF,KACpBjD,EAAYgB,EAAKiC,GAEbyH,EACA1K,EAAUoL,UAGJpL,EAAUqL,cAChBR,EAAU7K,EAAUsL,YAEJtL,EAAUuL,WACtBvL,EAAUsL,UAAYX,EAEjBE,EAAUD,EAAMD,GACrB3K,EAAUoL,WAIdpL,EAAUqL,WACVrK,EAAKgJ,OAAO/G,EAAK,IAKpBjC,EAAKhD,QAAUuH,IAChBiG,cAAcjG,GACdwF,IAAU,GAEdC,IAAW,GAInB,SAASS,EAAWf,GAChB,IAAInF,EAAKwF,IAEK,IAAVL,GACInF,IACAiG,cAAcjG,GACdwF,IAAU,GAEdN,EAAUC,IAEJnF,IACNwF,GAAUW,YAAYjB,EAAWkB,KAQzC,SAASC,IACLC,EAAU1H,MAAMG,KAAMvG,WAG1B,SAAS+N,IACLD,EAAU1H,MAAMG,KAAMvG,WAI1B,SAAS8N,IACL,IAAI7K,EAAO8J,GACPzG,EAAKC,KACTD,EAAGgH,WAAY,EACfrK,EAAKA,EAAKhD,QAAUqG,EACpBoH,ICvFJ,SAASM,EAAgBzO,GACrB,OAAID,SAAOC,KACPA,EAASA,EAAO0B,eACiB,IAA7BgN,GAAQtC,QAAQpM,IACTA,EAIR2O,GAASjP,IAAI,UAGxB,SAASkP,EAAYC,GACjB,IAAIC,EAASD,EAAOC,OAMpB,OAHArH,MAAI,8BAA+BoH,EAAQC,IAC3CA,EAASD,EAAOC,OAEZ/O,SAAO+O,IAAWvO,EAAOuO,GAClBA,EAIJtO,IAIX,SAASuO,EAAiB9M,EAAM+M,GAC5B,IACIC,EADArL,EAAW7D,SAKX6D,EADJqL,EAAOhN,EAAKiN,aAAa,YAAcjN,EAAKiN,aAAa,cAErDF,EAAcG,WAAW,iBAAmBF,GAI5CrL,EADJqL,EAAOhN,EAAKmN,UAERJ,EAAcrH,IAAMsH,GAIpBrL,EADJqL,EAAOhN,EAAKjC,UAERgP,EAAchP,OAASyO,EAAgBQ,IAIvCrL,EADJqL,EAAOhN,EAAKiN,aAAa,kBAErBF,EAAcF,OAASG,GAKvBrL,EADJqL,EAAOhN,EAAKiN,aAAa,yBAErBF,EAAcK,aAAeJ,GAGjCD,EAAcxK,KAAOvC,EAGzB,SAASqN,EAAmBT,EAAQG,GAChC,IAEIC,EAFArL,EAAW7D,SAKfkP,EAAOJ,EAAO5M,MAAQ4M,EAAOrK,MAAQqK,EAAO9M,QAAU8M,EAAOjG,KACzD2G,KAAKtN,KAAKgN,GACVF,EAAiBE,EAAMD,GAET,OAATC,QARG,IAQcA,IACtBD,EAAcxK,KAAOyK,GAGzBA,EAAOJ,EAAO5B,OAAS4B,EAAOW,SAAWX,EAAOY,WAC5CF,KAAKtN,KAAKgN,IAAmB,OAATA,QAbZ,IAa6BA,KACrCD,EAAc/B,MAAQgC,GAItBrL,EADJqL,EAAOJ,EAAOlH,OAEVqH,EAAcrH,IAAMsH,GAIpBrL,EADJqL,EAAOJ,EAAO7O,UAEVgP,EAAchP,OAASyO,EAAgBQ,IAIvCrL,EADJqL,EAAOJ,EAAOC,UAEVE,EAAcF,OAASG,GAIvBrL,EADJqL,EAAOJ,EAAOQ,gBAEVL,EAAcK,aAAeJ,GAIjCD,EAAcG,WAAW,YAAaN,GAAUA,EAAO5C,SAEvD+C,EAAcH,OAASA,EAEvBI,EAAO,KAGX,SACaS,EAAQ/H,EAAKkH,GAClB,IAMIC,EAAQa,EANR/L,EAAW7D,SACXmD,EAAWC,SACXnB,EAASC,EACT2N,EAAcN,EACdN,EAAgB,IAAIa,EACpBC,EAAUC,QAiCd,OA7BAH,EAAYjB,GAASqB,QAAShB,GAG1BpL,EAAS+D,IAELzE,EAAS2L,GACTe,EAAYf,EAAQG,GAEfhN,EAAO6M,IACZE,EAAiBF,EAAQG,GAG7BA,EAAcrH,IAAMA,GAGfzE,EAASyE,GACdiI,EAAYjI,EAAKqH,GAEZhN,EAAO2F,IACZoH,EAAiBpH,EAAKqH,IAI6B,IAAnDiB,GAAgB7D,QAAQ4C,EAAchP,UACtCgP,EAAckB,gBAAiB,GAK/BtM,EAASoL,EAAcrH,OAEvBmH,EAASF,EAAYI,KAEjBF,EAAS,IAAKpP,EAAIoP,IAASE,GAC3BA,EAAcF,OAASA,EACvBa,EAAWG,EAAQK,QAAQnB,GACXoB,KAAKtB,EAAOuB,OACZD,KAAKtB,EAAOwB,WACZF,KAAKtB,EAAOyB,SACJ,MAAEzB,EAAO0B,OAEjCxB,EAAcyB,IAAMd,EACpBX,EAAgBF,EAAS,KAClBa,GAKRG,EAAQY,OAAO,uCAI9B,SACaC,EAAS9Q,EAAMkB,GACpB,IAAIqF,EAAMuI,GACV,OAAIlO,UAAUC,OAAS,GACnB0F,EAAIlG,IAAIL,EAAMkB,GACPT,KAGJ8F,EAAI1G,IAAIG,OfnNnBF,iCgBF6B,oBAAX2E,OAAyBA,OACnB,oBAATsM,KAAuBA,KACZ,oBAAXC,OAAyBA,UCGxCC,GAAMC,EAAIC,IACVC,GAAI3M,GACJ4M,GAAMD,GAAEE,eACRC,KAAgBF,GAChBG,IAAe,EACfC,IAAkB,EAClBC,IAAkB,EAClBC,IAAiB,EACjBC,IAAsB,EACtBC,KAAgBT,GAAEU,eAElBb,KACIA,GAAIc,QACAV,KAEAG,GAAe,oBADfH,GAAMA,GAAI/Q,WAEVmR,GAAkB,qBAAsBJ,GACxCK,GAAkB,YAAaL,GAC/BM,GAAiB,iBAAkBN,GACnCO,GAAsB,eAAgBP,IAIrCJ,GAAIe,MAKjB,QACQC,IAAKV,GACLW,KAAMV,GACNW,QAASV,GACTW,QAASV,GACTW,OAAQV,GACRW,SAAUV,GACVW,IAAKV,GACLW,WAAYpB,GAAEqB,SACdC,OAAQtB,GAAEuB,KACVC,OAAQxB,GAAEyB,MAGlBzB,GAAIC,GAAM,+BhBlCN7Q,GAAU,KCPVc,GACI,4DACJE,GACI,kEACJE,GAAY,cCOZsB,GAAc,EACdE,GAAa,EEbbsB,GAAOC,GAAOC,KAEbF,KACDA,IAAO,GEAX,IAAI0B,GAAM,OACNF,GAAkB,GCclBS,GAAeqM,mBACflM,GAAiB,WACjBD,GAAkB,YAyEtB5G,EAAS,oBAAoB,EAAOgT,GAChChT,EAAS,eAAe,EAAOgT,GAGnChT,EAAS,oBAAoB,EAAMiT,GACnCjT,EAAS,eAAe,EAAMiT,GAI9BjT,EAAS,qCACD,EF7ER,SAAiB4E,GAKb,OAAQ,KAJGxB,EAAKwB,EAAMI,GACNpB,iBAGG3B,KAAK,QE2E5BjC,EAAS,uBACL,ED3DJ,SAAiB4E,GACb,IAAIsB,EAAMC,GACN+M,EAAWzN,IACXuD,EAAO5F,EAAKwB,EACAI,GACIpB,iBAQpB,OALKoF,EAAKlI,QACNkI,EAAK8D,OAAO,EAAG,EAAGoG,KAOd,oDACA,gBAAkBA,GACnBjR,KAAKiE,GAGRgN,EAAWhN,EAEX8C,EAAK/G,KAAKiE,EAAMgN,EAAWhN,GAG3BgN,EAAW,KAAOhN,KEnD1BgB,EAAO3G,WACH8G,aACI,QACA,YACA,UACA,UACA,SAEJ8L,SAAS,EACTrD,QAAS,KACT1J,SAAU,KAEVgN,YAAalM,EAGbmM,QAAS,SAAUvD,KAKnBwD,YAAa,SAAUxD,KAIvBvC,UAAW,SAAUuC,KAIrByD,UAAW,SAAUzD,EAAS0D,KAI9BC,QAAS,SAAUD,KAKnB/C,MAAO,SAAUX,GACb,IAAI3I,EAAKC,KAKT,OAJAD,EAAG2I,QAAUA,EACb3I,EAAGkM,QAAQvD,GACXA,EAAQ4D,UACRvM,EAAGf,SAAW0J,EAAQ1J,SACf0J,GAIXY,UAAW,SAAUZ,GACjB,IAAI6D,EAMJ,OAJAvM,KAAKkM,YAAYxD,IAGjB6D,EAAmB7D,EAAQ6D,mBAEvBC,SAAWD,EAAiBnD,OAE5BV,EAAQ+D,QAEDF,GAGJxD,QAAQW,OAAO,MAI1BH,QAAS,SAAU6C,GACf,IAAIrM,EAAKC,KACL0I,EAAU3I,EAAG2I,QACb1J,EAAW0J,GAAWA,EAAQ1J,SAGlC,OAAe,IAAXoN,GACCA,EAAS,KAAOA,EAAS,MACzB1D,IAAY1J,EAENe,EAAGyJ,MAAM4C,IAIpBrM,EAAGoM,UAAUzD,EAAS0D,GACtBpN,EAASsN,UAGT5D,EAAQgE,MACR1N,EAAS0N,MAEThE,EAAQ6D,iBAAmB,KAC3BxM,EAAGoG,UAAUuC,EAAS1J,UAEfe,EAAG2I,QAEH1J,IAIXwK,MAAO,SAAU4C,GACb,IAAIrM,EAAKC,KACL0I,EAAU3I,EAAG2I,QACb1J,EAAW0J,GAAWA,EAAQ1J,SAkBlC,OAhBAe,EAAGsM,QAAQD,GAGP1D,IACAA,EAAQ6D,iBAAmB,KAE3BxM,EAAGoG,UAAUuC,GACbA,EAAQgE,OAIR1N,GACAA,EAAS0N,aAGN3M,EAAG2I,QACHK,QAAQW,OAAO0C,IAG1BO,MAAO,cCvIX,IAAInM,GAAaoM,aAAW,0BAMxBC,GAAiBtM,EAAKpH,UA2B1BkH,EAAIlH,UAAY2T,cAAYvM,GACxBwM,MAAO,EACP9M,YAAa4M,GAAe5M,YAAY+M,QACxB,uBAGhBhB,YAAa3L,EAEb4M,mBAAoB,WAChB,IAOIb,EAPArM,EAAKC,KACL0I,EAAU3I,EAAG2I,QACboC,EAAMpC,EAAQwE,aACdzM,EAAMD,GAAWC,IACjBH,GAAQP,EAAI2I,GACZS,EAAUT,EAAQS,QAClBO,EAAShB,EAAQgB,OAGrB,IAAKhB,EAAQqD,SAAW5C,GAAWO,EAAQ,CAIvC,OAFAjJ,EAAI,0BAA2BH,GAEvBwK,EAAIqC,YACZ,KAvDO,EAwDP,KAvDO,EAwDP,KAvDiB,EAwDjB,KAvDQ,EAuDY,MACpB,KAvDK,GAwDDf,EAAStB,EAAIsB,QACA,KAAOA,EAAS,IACzB1C,EAAO0C,GAGPjD,EAAQiD,GAGhB3L,EAAI,oBAAqBH,GAE7BP,EAAK+K,EAAMpC,EAAUpI,EAAOA,EAAK,GAAKA,EAAK,GAAK,MAGpD8M,uBAAwB,SAAS1E,GAO7B,OAAO,IAAIK,QANX,SAAcI,EAASO,GACnB,IAAI2D,EAAQ3E,EACZ2E,EAAMlE,QAAUA,EAChBkE,EAAM3D,OAASA,EACf2D,EAAQ,QAKhBpB,QAAS,SAAUvD,GACf,IAAI3I,EAAKC,KACLM,GAAQP,EAAI2I,GACZjI,EAAMD,GAAWC,IACjBqK,EAAM,IAAKxN,GAAqB,eAGpCoL,EAAQwE,aAAepC,EAEvBrK,EAAI,eAAgBH,GAEpBwK,EAAIwC,mBAAqBvN,EAAGkN,mBAC5BnC,EAAIyC,KAAK7E,EAAQ1P,OAAOoC,cAAesN,EAAQ8E,UAAU,GAGzD/M,EAAI,cAAeH,GAEnBwK,EAAMxK,EAAOA,EAAK,GAAKA,EAAK,GAAK,MAIrC4L,YAAa,SAAUxD,GACnB,IAAI3I,EAAKC,KACL8K,EAAMpC,EAAQwE,aACdjI,EAAUyD,EAAQzD,QAClB3E,GAAQP,EAAI2I,GAEhBlI,GAAWC,IAAI,iBAAkBH,GAEjCoI,EAAQ6D,iBAAmBxM,EAAGqN,uBAAuB1E,GAKrDzD,EAAUyD,EAAQzD,QACd9I,SAAO8I,IACPjJ,OAAKiJ,EAAS9E,EAAa2K,GAG/BA,EAAI2C,KAAK/E,EAAQ9G,MAEjBpB,GAAWC,IAAI,gBAAiBH,GAGhCwK,EAAMxK,EAAOA,EAAK,GAAKA,EAAK,GAAK,MAMrC6L,UAAW,SAAUzD,GACjB,IAAI3I,EAAKC,KACL8K,EAAMpC,EAAQwE,aACdlO,EAAW0J,EAAQ1J,SACnBsB,GAAQP,EAAI2I,GACZjI,EAAMD,GAAWC,IAErBzB,EAASoN,OAAStB,EAAIsB,OACtBpN,EAAS0O,WAAa5C,EAAI4C,WAC1B1O,EAASmJ,WAAW2C,EAAI6C,yBACxB3O,EAAS4C,KAAOkJ,EAAI8C,aAEpBnN,EAAI,iBAAkBH,GAEtBwK,EAAMxK,EAAOA,EAAK,GAAKA,EAAK,GAAK,MAIrC6F,UAAW,SAAUuC,GACjB,IAEIpI,EAFAP,EAAKC,KACL8K,EAAMpC,EAAQwE,aAGdpC,IACAxK,GAAQP,EAAI2I,GACZlI,GAAWC,IAAI,gBAAiBH,GAChCA,EAAOA,EAAK,GAAKA,EAAK,GACdwK,EAAMA,EAAIwC,mBAAqB,MAG3C5E,EAAQ6D,iBACJ7D,EAAQS,QACRT,EAAQgB,OACRhB,EAAQwE,aAAepC,EAAM,QQnKzC,IACIlS,GADagU,aAAW,0BACFhU,SAEtBiV,GAAY3D,EAAI/Q,UAChB2U,GAAQD,GAAU5N,YAClB8N,GAAcD,GAAMpU,OACpBsU,GAAWC,GAAO9C,SAClB+C,GAAW,EAsEXD,GAAOlD,OACPmD,KACAtV,GA7EiB,iBAiBrB,SAA4BgH,EAAU8I,IAEU,IAAxCA,EAAQyF,SAAS,qBACjBzF,EAAQwE,aAAakB,iBAAkB,MA6D3CH,GAAO5C,WACP6C,KACAtV,GAnFiB,iBA+DrB,SAAyBgH,EAAU8I,GAG3BA,EAAQ9G,gBAAgBtE,GAAOgO,iBACxB5C,EAAQzD,QAAQ,mBAoB3B+I,KACAE,KACAJ,GAAMC,MAAiB,aACvBF,GAAUQ,WAjEd,SAAoBvM,GAEhB,IAGIwM,EAFA5F,EADW1I,KACQ0I,QACnBe,EAAMf,EAAQe,IAGdf,GAAW5G,EAAMyM,mBACjBD,EAASxM,EAAMwM,OAASxM,EAAMlD,MAE9B8J,EAAQ8F,cAAgBF,EACpB7E,IACAA,EAAI+E,cAAgBF,KAsD5B1V,GA3FiB,iBA2CrB,SAA0BgH,EAAU8I,GACtBA,EAAQe,IAEd+E,cAAgB,EAEhB9F,IACAA,EAAQ8F,cAAgB,GAG5B9M,KAAGgH,EAAQwE,aAAc,WAAYtN,EAASyO,eA2C9CJ,GAAOhD,SACPrS,GAhGiB,iBAQrB,SAAoBgH,EAAU8I,GAC1B,IAAI+F,EAAU/F,EAAQyF,SAAS,WAE3B1I,SAAOgJ,IAAYA,EAAU,KAC7B/F,EAAQwE,aAAauB,QAAUA,KA0FnCP,KACIA,GAAW,IACXL,GAAUd,MAAQ,GAEtBnU,GAAS,UAlDb,SAAiBgH,EAAU8I,GACnBsF,IACA/L,KAAGyG,EAAQwE,aAAc,WAAYtN,EAASyO,ePnDtD,IAAIxB,GAAiBtM,EAAKpH,UACtBuV,GAAgB,sBAChBxN,GAAkB,EAwItBqC,EAAWpK,UAAY2T,cAAYvM,GAC/ByL,YAAazI,EAEb1C,cAAe,cACf5G,YAAa,mBAEbgG,YAAa4M,GAAe5M,YAAY+M,QACxB,cACA,uBACA,cAGhBI,uBAAwB,SAAU1E,GAM9B,OAAO,IAAIK,QALX,SAAcI,EAASO,GACnB,IAAI2D,EAAQ3E,EACZ2E,EAAMlE,QAAUA,EAChBkE,EAAM3D,OAASA,KAKvBiF,YAAa,WACT,IAAI5O,EAAKC,KACL0I,EAAU3I,EAAG2I,QACbzN,EAAOyN,EAAQzN,KAGnBgH,KAAGhH,EAAM,oBAAqB8E,EAAG4O,aAEjC1T,EAAK2T,QAAU3T,EAAK4T,SAAWnG,EAAQ9H,YAEvC8H,EAAQoG,eAAiBxR,GAAOyR,WAAWhP,EAAGiP,qBAAsB,IAEpE/T,EAAO,MAKX+T,qBAAsB,WAClB,IAAIjP,EAAKC,KACL0I,EAAU3I,EAAG2I,QACbzN,EAAOyN,GAAWA,EAAQzN,KAE1BA,GACAyG,KAAGgH,EAAQ5H,OAAQ,OAAQf,EAAGkP,WAC9BhU,EAAKiU,UAGAxG,GACLA,EAAQgB,OAAO,KAGnBhB,EAAUzN,EAAO,MAGrBgU,UAAW,WACP,IAAIlP,EAAKC,KACL0I,EAAU3I,EAAG2I,QACb5H,EAAS4H,EAAQ5H,OACjByI,GAAU,EACV4F,EAAU,GAEdlN,KAAGnB,EAAQ,OAAQf,EAAGkP,WAEtB,IACIE,EAAUrO,EAAOsO,cAAcpO,SAASY,KAAKL,UAC7CgI,GAAU,EAEd,MAAO5L,IAEH4L,GACAb,EAAQ2G,aAAeF,EAAQrM,QAAQ4L,GAAe,IACtDhG,EAAQS,QAAQ,MAGhBT,EAAQgB,OAAO,KAGnB5I,EAAS,MAIbmL,QAAS,SAAUvD,GACf,IAAI3I,EAAKC,KACLuC,KAKAtH,EAAOmH,EAJF1B,EAAWgI,EAAQ1P,OACR0P,EAAQ8E,SACR9E,EAAQ9H,YACRb,EAAGc,gBAEnBnF,GACI6G,UAAWA,EACXC,SAAUlF,GAAO0D,SAASsO,yBAC1BvM,OAAO,EACP+E,OAAQ/H,EACR2I,QAASA,GAEb6G,EAAsB7G,EAAQL,aAGlCrM,EAAK0M,EAAQlL,KAAM8E,EAAa5G,GAGhCT,EAAK4G,YAAYnG,EAAU8G,UAC3BkG,EAAQzN,KAAOA,EACfyN,EAAQ5H,OAAS7F,EAAKwG,WACtBiH,EAAQnG,UAAY7G,EAAU6G,UAC9BmG,EAAQ8G,WAAa9T,EAAUqH,MAG1BhK,SAAOwW,KACR7G,EAAQL,aAAetI,EAAG9F,aAI9BwV,QAAM/T,GAENgN,EAAQ6D,iBAAmBxM,EAAGqN,uBAAuB1E,GAErDzN,EAAO,MAIXiR,YAAa,SAAUxD,GAEnB,IAAIzN,EAAOyN,EAAQzN,KACf2F,EAAc,oCAGd8H,EAAQ8G,aACR5O,EAAc,uBAGlB8H,EAAQP,WAAW,iBAAmBvH,GAEO,UAAzC3F,EAAKiN,aAAa,mBAClBlI,KAAK2O,cAGLjN,KAAGzG,EAAM,oBAAqB+E,KAAK2O,cAK3CxC,UAAW,SAAUzD,GACjB,IACI1J,EADKgB,KACShB,SACd0Q,EAAehH,EAAQ2G,aAEvBtW,SAAO2W,KACP1Q,EAAS4C,KAAO8N,IAIxBvJ,UAAW,SAAUuC,GACjB,IAAInG,EAAYmG,EAAQnG,UACpBtH,EAAOyN,EAAQzN,KAGfqB,QAAMiG,IACNU,EAAgBV,GAGhBtH,GACA0U,SAAO1U,EAAK+G,YAAc/G,GAG9ByN,EAAQ6D,iBACJ7D,EAAQS,QACRT,EAAQgB,OACRhB,EAAQzN,KAAOA,EAAO,QElUlC,IAAIiJ,GAAgB,aAChBE,GAAe,4BACfE,GAAoB,4BACpBE,GACI,8DACJE,GACI,kEACJE,GAAY,yBACZE,GAAiB,eCGjB4B,IAAW,EACXW,GAAiB,IACjBR,GAAM,IACNJ,IAAU,EACVD,MACAN,GAAsB,mCAiG1BqB,EAAUpO,WAEN6N,eAAW,EACXpG,YAAa,2BACbqE,QAAS,KACTrD,KAAM,KACNpE,KAAM,KACNuJ,WAAW,EACXE,YAAY,EACZ+E,YAAazE,EAEbkF,MAAO,WACH,IAAI1M,EAAKC,KAMT,OALKD,EAAGgH,WAAchH,EAAGkH,aACrBlH,EAAGkH,YAAa,SACTlH,EAAGiH,UACVG,KAEGpH,GAGX2M,IAAK,WACD,IAAI3M,EAAKC,KAMT,OALKD,EAAGgH,WAAahH,EAAGkH,oBACblH,EAAGkH,kBACHlH,EAAGiH,UACVG,KAEGpH,GAGXoI,WAAY,SAAUlD,GAClB,IACI9F,EAASyB,EADTb,EAAKC,KAyBT,OAtBAiF,EAAU9G,EAAM8G,MAGZ9F,EAAUY,EAAGkF,QACT9I,SAAOgD,GACPyQ,SAAOzQ,EAAS8F,GAGhBlF,EAAGkF,QAAUA,GAIjBrE,EAAcb,EAAG8P,OAAO,iBAEpB9P,EAAGa,YAAcA,SAGVb,EAAG+P,YAKX9P,MAGX6P,OAAQ,SAAUhX,GACd,IACIsG,EADKa,KACQiF,QAEjB,OAAIlM,SAAOF,IAASsD,SAAOgD,KACvBtG,EAAOmM,EAAWnM,GAEd0D,WAAS4C,EAAStG,IACXsG,EAAQtG,GAKhB,MAGXiO,QAAS,WACL,IAAI/G,EAAKC,KAKT,OAJKD,EAAGgH,YACJhH,EAAGgH,WAAY,EACf0I,QAAM1P,IAEHA,IAKfuH,EAAQnO,UAAY2T,cAAYvF,GAC5B5G,IAAK,KACL3H,OAAQ,MACRgT,YAAa1E,EACbtI,SAAU,KACV+M,SAAS,EACT0C,QAAS,EACT5G,OAAQ,KACRkI,iBAAkB,oCAClBC,cAAc,EACd9G,gBAAgB,EAEhBsE,OAAQ,WACJ,IAAIzN,EAAKC,KACLpD,EAAW7D,SACX4H,EAAMZ,EAAGY,IACTsF,EAAQlG,EAAGkG,MACXzI,EAAOuC,EAAGvC,KACVyS,EAAkBlQ,EAAGgQ,iBACrBlQ,EAAQkG,EAmBZ,OAhBIhG,EAAGiQ,cAAgBpT,EAAS+D,IAAQ/D,EAASqT,KAGzCrT,EADJqJ,EAAQvG,EAAUuQ,GAAiB,EAAOhK,GAAO,MAE7CtF,EAAMd,EAAMc,EAAKsF,KAIK,IAAtBlG,EAAGmJ,gBAGCtM,EAFJY,EAAOkC,EAAUuQ,GAAiB,EAAOzS,GAAM,MAG3CmD,EAAMd,EAAMc,EAAKnD,KAItBmD,GAGXwN,SAAU,SAAUtV,GAChB,IAAIgP,EAAS7H,KAAK6H,OAElB,GAAI1L,SAAO0L,IAAWtL,WAASsL,EAAQhP,GACnC,OAAOgP,EAAOhP,IAKtByT,QAAS,WACL,IAAIvM,EAAKC,KACLkQ,EAASxQ,EAAUK,EAAG8P,OAAO,iBACV,EACA9P,EAAGvC,MACtByH,EAAUiL,EAAO,GACjB7H,EAAetI,EAAGsI,aAClBrJ,EAAWe,EAAGf,SAGdiG,GACAlF,EAAGoI,WAAWlD,IAGQ,IAAtBlF,EAAGmJ,sBACInJ,EAAG6B,KAGV7B,EAAG6B,KAAOsO,EAAO,GAIjBlR,GACAA,EAAS8H,UAGb/G,EAAGf,SAAWA,EAAW,IAAIwI,EAGzBzO,SAAOsP,IACPrJ,EAASmJ,WAAW,iBAAmBE,GAE3CrJ,EAAS0J,QAAU3I,EACnBf,EAASyN,QAETyD,EAAS,QAIjB1I,EAASrO,UAAY2T,cAAYvF,GAC7ByE,YAAaxE,EACb4E,OAAQ,EACRsB,WAAY,gBACZpB,QAAS,WACL,IAAIvM,EAAKC,KACLkQ,EAASxQ,EAAUK,EAAG8P,OAAO,iBACD,EACA9P,EAAG6B,MAC/BqD,EAAUiL,EAAO,GAGjBjL,GACAlF,EAAGoI,WAAWlD,GAGlBlF,EAAGvC,KAAO0S,EAAO,MAMzBC,aA3NA,WACIhJ,GAAW,KChFf,IAAIQ,GAAWgE,mBACXjE,IAAW,MAAM,OAAO,MAAM,QAAQ,SAAS,WAC/CuB,IAAmB,OAAQ,MAAO,SIKtC,GJ+LAzP,EAAI,OAGJmO,GAASzO,IAAI,SAAU,OAGvByO,GAASzO,IAAI,WACTkX,OAAU,oDACVC,eAAgB,sBIvMf/S,GAAOgT,OACR,MAAM,IAAI7S,MAAM,2DAKhBwQ,GAAOnD,MACPyF,EAAe,MAAOC,GAEtBD,EAAe,OAAQE,IAIvBzG,OAAOA,MAAIY,SACX2F,EAAe,cACXtC,GAAOnD,KAAOmD,GAAO1C,MAAQ0C,GAAOxC,KAEhCgF,EAGAC,GAIZC,EAAkB,cACd,ECjDJ,SAAiBnT,GAMb,OAJIiI,SAAOjI,KACPA,EAAOA,EAAKO,SAAS,MAGjB,2BACAhF,SAAOyE,GACHA,EAAO,MD6CnByQ,GAAO5C,UAGPsF,EAAkB,uBACd,EPXR,SAAiBnT,GACb,OAAQ,KACAxB,EAAKwB,EACDgG,GAEIhH,YAAa,IAAKc,GAAe,gIZtDrD,SACiBsT,GACTjY,EAAciY,GqBClBC"}