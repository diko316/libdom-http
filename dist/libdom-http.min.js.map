{"version":3,"file":"libdom-http.min.js","sources":["../src/lib/chain.js","../src/lib/driver.js","../src/lib/type.js","../src/lib/transform/helper.js","../src/lib/transform/request-json.js","../src/lib/transform/response-json.js","../src/lib/transform/request-form-urlencoded.js","../src/lib/transform/request-form-multipart.js","../src/lib/transform.js","../src/lib/driver/base.js","../src/lib/driver/xhr.js","../src/lib/driver/form-upload.js","../src/lib/transform/request-html5-form-data.js","../src/lib/header.js","../src/lib/operation.js","../src/lib/request.js","../node_modules/rollup-plugin-node-globals/src/global.js","../src/lib/detect.js","../src/lib/driver/xhr2.js","../src/all.js","../src/lib/transform/response-text-plain.js","../src/index.js"],"sourcesContent":["'use strict';\n\nvar MAIN_MODULE;\n\nexport\n    function use(mainModule) {\n        MAIN_MODULE = mainModule;\n    }\n    \nexport\n    function get() {\n        return MAIN_MODULE;\n    }","'use strict';\n\nimport {\n            string,\n            method,\n            createRegistry\n        } from \"libcore\";\n        \nimport { get as getModule } from \"./chain.js\";\n\n\nvar DRIVERS = createRegistry(),\n    DEFAULT = null,\n    exported = {\n        register: register,\n        exists: exists,\n        use: use,\n        get: get\n    };\n    \n/**\n * driver management\n */\nexport\n    function register(name, Class) {\n            \n        if (string(name) && method(Class)) {\n            DRIVERS.set(name, Class);\n            Class.prototype.type = name;\n            \n            if (!DEFAULT) {\n                DEFAULT = name;\n            }\n        }\n        \n        return getModule();\n    }\nexport\n    function exists(name) {\n        return DRIVERS.exists(name);\n    }\n\nexport\n    function use(name) {\n        if (arguments.length > 0 && exists(name)) {\n            DEFAULT = name;\n        }\n        return DEFAULT;\n    }\n\n/**\n * driver process\n */\nexport\n    function get(type) {\n        return DRIVERS.get(type);\n    }\n\nexport default exported;","'use strict';\n\n\nimport { string } from \"libcore\";\n        \nvar MIME_TYPE_RE =\n        /^([a-z0-9\\-\\_]+)\\/([a-z\\-\\_0-9]+)(([ \\s\\t]*\\;([^\\;]+))*)$/,\n    MIME_TYPE_PARAMS_RE =\n        /^[ \\t\\s]*([a-z0-9\\-\\_]+)\\=(\\\"([^\\\"]+)\\\"|[a-z0-9\\-\\_]+)[ \\t\\s]*$/,\n    QUOTED_RE = /^\\\"[^\\\"]+\\\"/,\n    exported = {\n        parse: parseType\n    };\n\n\n    function parseType(type) {\n        var mtypeRe = MIME_TYPE_RE,\n            paramRe = MIME_TYPE_PARAMS_RE,\n            quotedRe = QUOTED_RE,\n            paramGlue = \"; \",\n            parameterObject = null;\n            \n        var match, subtype, parameters, name, value, l, defaultType;\n        \n        if (string(type) && mtypeRe.test(type)) {\n            match = type.match(mtypeRe);\n            type = match[1].toLowerCase();\n            subtype = match[2].toLowerCase();\n            parameters = match[3] || '';\n            \n            if (parameters) {\n                parameterObject = {};\n                parameters = parameters.split(';');\n                l = parameters.length;\n                \n                for (; l--;) {\n                    match = parameters[l].match(paramRe);\n                    if (match) {\n                        name = match[1].toLowerCase();\n                        value = match[2];\n                        \n                        // create parameters string\n                        parameters[l] = name + '=' + value;\n                        \n                        // register\n                        parameterObject[name] = quotedRe.test(value) ?\n                                                    value.substring(1,\n                                                                value.length -1) :\n                                                    value;\n                        \n                    }\n                }\n                parameters = parameters.join(paramGlue);\n            }\n            \n            defaultType = type + '/' + subtype;\n            \n            return {\n                string: defaultType +\n                        (parameters ?\n                            paramGlue + parameters : ''),\n                root: defaultType,\n                type: type,\n                subtype: subtype,\n                params: parameterObject\n            };\n        }\n        \n        return void(0);\n    }\n    \nexport { parseType as parse };\n\nexport default exported;\n","'use strict';\n\nimport {\n            string,\n            object,\n            array,\n            date,\n            contains,\n            each as eachProperty\n            \n        } from \"libcore\";\n\nimport {\n            is\n        } from \"libdom\";\n\nvar TYPE_OBJECT = 1,\n    TYPE_ARRAY = 2;\n\n\n\nfunction isForm(form) {\n    return is(form, 1) && form.tagName.toUpperCase() === 'FORM';\n}\n\nfunction isField(field) {\n    if (is(field, 1)) {\n        switch (field.tagName.toUpperCase()) {\n        case 'INPUT':\n        case 'TEXTAREA':\n        case 'BUTTON':\n        case 'SELECT':\n        case 'OUTPUT': return true;\n        }\n    }\n    return false;\n}\n\nfunction onEachObjectValueProperty(value, name) {\n    /* jshint validthis: true */\n    var context = this;\n    \n    eachField(value,\n              name,\n              context[1],\n              context[0]);\n}\n\nfunction eachValues(values, callback, operation) {\n    var typeObject = TYPE_OBJECT,\n        typeArray = TYPE_ARRAY,\n        type = null,\n        each = eachField,\n        isObject = object,\n        isObjectValue = isObject(values);\n        \n    var c, l;\n    \n    if (isForm(values)) {\n        values = values.elements;\n        type = typeArray;\n        isObjectValue = false;\n    }\n    else if (isField(values)) {\n        type = typeArray;\n        values = [values];\n    }\n    else if (isObjectValue) {\n        type = typeObject;\n    }\n    else if (array(values)) {\n        type = typeArray;\n        isObjectValue = false;\n    }\n    \n    if (!isObject(operation)) {\n        operation = {};\n    }\n    \n    if (!contains(operation, 'returnValue')) {\n        operation.returnValue = null;\n    }\n    \n    if (isObjectValue || type === typeArray) {\n        if (isObjectValue) {\n            eachProperty(values,\n                         onEachObjectValueProperty,\n                         [operation, callback],\n                         true);\n        }\n        else {\n            for (c = -1, l = values.length; l--;) {\n                each(values[++c], null, callback, operation);\n            }\n        }\n    }\n    \n    return operation.returnValue;\n}\n\nfunction eachField(field, name, callback, operation) {\n    var isString = string,\n        hasName = isString(name),\n        fieldType = 'variant';\n    var type, c, l, list, option;\n    \n    if (isField(field)) {\n        if (!hasName && !isString(name = field.name)) {\n            return;\n        }\n        type = 'field';\n        hasName = true;\n        fieldType = field.type;\n        \n        // field exception by tagname\n        switch (field.tagName.toUpperCase()) {\n        case \"BUTTON\":\n            if (!isString(fieldType)) {\n                fieldType = \"button\";\n            }\n            break;\n\n        case \"SELECT\":\n            type = 'field-options';\n            fieldType = 'select';\n            list = field.options;\n            for (c = -1, l = list.length; l--;) {\n                option = list[++c];\n                // run callback\n                if (option.selected) {\n                    callback(operation,\n                            name,\n                            option.value,\n                            type,\n                            fieldType);\n                }\n            }\n            list = option = null;\n            return;\n        \n        case \"TEXTAREA\":\n            fieldType = \"text\";\n            break;\n        }\n        \n        // field exception by type\n        switch (fieldType) {\n        case \"checkbox\":\n        case \"radio\":\n            if (!field.checked) {\n                return;\n            }\n        }\n        \n    }\n    else {\n        switch (true) {\n        case array(field):\n            type = 'array';\n            break;\n        case date(field):\n            type = 'date';\n            break;\n        default:\n            type = typeof field;\n        }\n    }\n    \n    if (hasName) {\n        callback(operation, name, field, type, fieldType);\n    }\n}\n\nexport\n    function jsonify(raw) {\n        var json = global.JSON,\n            data = null;\n            \n        if (!json) {\n            throw new Error(\"JSON is not supported in this platform\");\n        }\n        try {\n            data = json.stringify(raw);\n        }\n        catch (e) {}\n        return data === 'null' || data === null ? '' : data;\n    }\n\nexport {\n            eachValues as each,\n            isForm as form,\n            isField as field\n        };\n\nexport default {\n                each: eachValues,\n                form: isForm,\n                field: isField,\n                jsonify: jsonify\n            };\n","'use strict';\n\nimport {\n            string,\n            jsonFill\n        } from \"libcore\";\n        \nimport {\n            jsonify,\n            each\n        } from \"./helper.js\";\n\n\nfunction createValue(operation, name, value, type, fieldType) {\n    var items = operation.returnValue,\n        isField = type === \"field\";\n    \n    if (isField) {\n        // i can't support file upload\n        if (fieldType === \"file\") {\n            return;\n        }\n        value = value.value;\n    }\n    \n    if (value === 'number') {\n        value = isFinite(value) ? value.toString(10) : '';\n    }\n    else if (!string(value)) {\n        value = jsonify(value);\n    }\n    \n    // this type of encoding is only available in form fields\n    if ((isField || type === 'field-options')) {\n        \n        // use libcore to fill-in json\n        jsonFill(items, name, value);\n        \n    }\n    else {\n        \n        items[name] = value;\n        \n    }\n    items = value = null;\n\n}\n\nfunction convert(data) {\n    var operation = {\n            index: {},\n            returnValue: {}\n        },\n        body = each(data, createValue, operation);\n    \n    return [null, jsonify(body)];\n}\n\nexport default convert;\n","'use strict';\n\nimport { string } from \"libcore\";\n\nvar json = global.JSON;\n\nif (!json) {\n    json = false;\n}\n\n\nfunction convert(data) {\n    \n    if (!json) {\n        throw new Error(\"JSON is not supported in this platform\");\n    }\n    else if (!string(data)) {\n        return null;\n    }\n    \n    try {\n        data = json.parse(data);\n    }\n    catch (e) {\n        return null;\n    }\n    \n    return [null, data];\n}\n\nexport default convert;","'use strict';\n\nimport {\n            each,\n            jsonify\n        } from \"./helper.js\";\n\nfunction createValue(operation, name, value, type, fieldType) {\n    var items = operation.returnValue;\n    \n    if (type === 'field') {\n        // i can't support file upload\n        if (fieldType === \"file\") {\n            return;\n        }\n        value = value.value;\n    }\n    \n    if (typeof value === 'number') {\n        value = isFinite(value) ? value.toString(10) : '';\n    }\n    else if (typeof value !== 'string') {\n        value = jsonify(value);\n    }\n    \n    // encode\n    items[items.length] = name + '=' + encodeURIComponent(value);\n}\n\n\nfunction convert(data) {\n    var body = each(data, createValue, {\n                    returnValue: []\n                });\n    \n    return [null, body.join('&')];\n}\n\nexport default convert;\n","'use strict';\n\nimport {\n            each,\n            jsonify\n        } from \"./helper.js\";\n\nvar EOL = \"\\r\\n\",\n    BOUNDARY_LENGTH = 48;\n\nfunction createBoundary() {\n    var ender = Math.random().toString().substr(2),\n        output = [],\n        len = 0,\n        total = BOUNDARY_LENGTH - ender.length;\n    \n    for (; total--;) {\n        output[len++] = '-';\n    }\n    output[len++] = ender;\n    return output.join('');\n}\n\nfunction createValue(operation, name, value, type, fieldType) {\n    var eol = EOL,\n        items = operation.returnValue;\n    \n    if (type === 'field') {\n        // i can't support file upload\n        if (fieldType === \"file\") {\n            return;\n        }\n        value = value.value;\n    }\n    \n    if (typeof value === 'number') {\n        value = isFinite(value) ? value.toString(10) : '';\n    }\n    else if (typeof value !== 'string') {\n        value = jsonify(value);\n    }\n    \n    // encode\n    items[items.length] = ([\n                'Content-Disposition: form-data; name=\"' + name + '\"',\n                'Content-type: application/octet-stream',\n                eol,\n                value\n            ]).join(eol);\n    \n}\n\nfunction convert(data) {\n    var eol = EOL,\n        boundary = createBoundary(),\n        body = each(data,\n                    createValue, {\n                        returnValue: []\n                    });\n    // start boundary\n    if (!body.length) {\n        body.splice(0, 0, boundary);\n    }\n    \n    \n    return [\n        // create header\n        ([\n            'Content-Type: multipart/form-data; charset=utf-8;',\n            '    boundary=' + boundary\n        ]).join(eol),\n        \n        // start boundary\n        boundary + eol +\n        \n        body.join(eol + boundary + eol) +\n        \n        // end boundary\n        boundary + '--' + eol\n    ];\n    \n}\n\n\nexport default convert;","'use strict';\n\nimport {\n            array,\n            method,\n            createRegistry\n        } from \"libcore\";\n        \nimport { get as getModule } from \"./chain.js\";\n\nimport { parse } from \"./type.js\";\n\nimport transformRequestJSON from \"./transform/request-json.js\";\n\nimport transformResponseJSON from \"./transform/response-json.js\";\n\nimport transformRequestURLEncode\n            from \"./transform/request-form-urlencoded.js\";\n            \nimport transformRequestFormMultipart\n            from \"./transform/request-form-multipart.js\";\n\nvar TRANSFORMERS = createRegistry(),\n    REQUEST_PREFIX = 'request-',\n    RESPONSE_PREFIX = 'response-',\n    exported = {\n        register: register,\n        transform: transform\n    };\n\nexport\n    function register(type, response, handler) {\n        var transformers = TRANSFORMERS,\n            responsePrefix = RESPONSE_PREFIX;\n        var finalType, current, all;\n        \n        if (method(handler)) {\n            type = parse(type);\n            if (type) {\n                all = response === 'all';\n                response = response === true ? REQUEST_PREFIX : responsePrefix;\n                \n                finalType = response + type.root;\n                current = response + type.string;\n                \n                // register root\n                if (current !== finalType && !transformers.exists(finalType)) {\n                    transformers.set(finalType, handler);\n                }\n                \n                transformers.set(current, handler);\n                \n                // include response\n                if (all) {\n                    transformers.set(responsePrefix + type.string, handler);\n                }\n                \n            }\n        }\n        return getModule();\n    }\n\nexport\n    function transform(type, response, data) {\n        var transformers = TRANSFORMERS;\n        var finalType;\n        \n        type = parse(type);\n        \n        if (type) {\n            response = response === true ? REQUEST_PREFIX : RESPONSE_PREFIX;\n            \n            \n            finalType = response + type.string;\n            if (transformers.exists(finalType)) {\n                return transformers.get(finalType)(data);\n            }\n            \n            // try root\n            finalType = response + type.root;\n            if (transformers.exists(finalType)) {\n                data = transformers.get(finalType)(data);\n                return array(data) ? data : [null, null];\n            }\n            \n        }\n        \n        return [null, data];\n    }\n\nexport default exported;\n\n\n/**\n * add default transformers\n */\n\nregister('application/json', false, transformRequestJSON);\n    register('text/x-json', false, transformRequestJSON);\n    \n// response json\nregister('application/json', true, transformResponseJSON);\nregister('text/x-json', true, transformResponseJSON);\n\n\n// old school requests\nregister('application/x-www-form-urlencoded',\n        false,\n        transformRequestURLEncode);\n\nregister('multipart/form-data',\n    false,\n    transformRequestFormMultipart);\n    \n\n    \n","'use strict';\n\nimport {\n            method as isFunction\n        } from \"libcore\";\n        \n\n\nfunction bind(instance, method) {\n    function bound() {\n        return method.apply(instance, arguments);\n    }\n    return bound;\n}\n\nfunction Driver() {\n    var me = this,\n        list = this.bindMethods,\n        len = list.length,\n        bindMethod = bind;\n    var name;\n    for (; len--;) {\n        name = list[len];\n        me[name] = bindMethod(me, me[name]);\n    }\n}\n\nDriver.prototype = {\n    bindMethods: [\n        'setup',\n        'transport',\n        'process',\n        'success',\n        'error'\n    ],\n    aborted: false,\n    request: null,\n    response: null,\n    \n    constructor: Driver,\n    \n    /* jshint unused:false */\n    onSetup: function (request) {\n        \n    },\n    \n    /* jshint unused:false */\n    onTransport: function (request) {\n        \n    },\n    \n    onCleanup: function (request) {\n        \n    },\n    \n    onSuccess: function (request, status) {\n        \n    },\n    \n    onError: function (status) {\n        \n        \n    },\n    \n    setup: function (request) {\n        var me = this;\n        me.request = request;\n        me.onSetup(request);\n        request.process();\n        me.response = request.response;\n        return request;\n    },\n    \n    /* jshint unused:false */\n    transport: function (request) {\n        var transportPromise;\n        \n        this.onTransport(request);\n        \n        // it's a promise! :-)\n        transportPromise = request.transportPromise;\n        if (transportPromise &&\n            isFunction(transportPromise.then)) {\n            \n            request.begin();\n            \n            return transportPromise;\n        }\n        \n        return Promise.reject(610);\n    },\n    \n    /* jshint unused:false */\n    success: function (status) {\n        var me = this,\n            request = me.request,\n            response = request && request.response;\n        \n        // aborted request or errors\n        if (status === 0 ||\n            (status < 200 && status > 299) ||\n            !request || !response) {\n            \n            return me.error(status);\n        }\n        \n        // process response\n        me.onSuccess(request, status);\n        response.process();\n        \n        // end request and response\n        request.end();\n        response.end();\n        \n        request.transportPromise = null;\n        me.onCleanup(request, response);\n        \n        delete me.request;\n        \n        return response;\n        \n    },\n    \n    error: function (status) {\n        var me = this,\n            request = me.request,\n            response = request && request.response;\n        \n        me.onError(status);\n        \n        // process response\n        if (request) {\n            request.transportPromise = null;\n            \n            me.onCleanup(request);\n            request.end();\n        }\n        \n        // end response\n        if (response) {\n            response.end();\n        }\n        \n        delete me.request;\n        return Promise.reject(status);\n    },\n    \n    abort: function () {\n        //var me = this,\n        //    request = me.request;\n        //\n        //if (!me.aborted) {   \n        //    me.aborted = true;\n        //    \n        //    if (request && LIBCORE.method(request.resolve)) {\n        //        request.resolve(0);\n        //    }\n        //}\n    }\n};\n\nexport default Driver;\n","'use strict';\n\nimport {\n            object,\n            array,\n            each,\n            instantiate,\n            middleware\n        } from \"libcore\";\n\nimport BASE from \"./base.js\";\n\nvar MIDDLEWARE = middleware(\"libdom-http.driver.xhr\"),\n    STATE_UNSENT = 0,\n    STATE_OPENED = 1,\n    STATE_HEADERS_RECEIVED = 2,\n    STATE_LOADING = 3,\n    STATE_DONE = 4,\n    BASE_PROTOTYPE = BASE.prototype;\n\n\nfunction applyHeader(value, name) {\n    /* jshint validthis:true */\n    var me = this;\n    var c, l;\n    if (!array(value)) {\n        value = [value];\n    }\n    for (c = -1, l = value.length; l--;) {\n        me.setRequestHeader(name, value[++c]);\n    }\n}\n\n\nfunction Xhr() {\n    var me = this,\n        args = [me];\n    BASE.apply(me, arguments);\n    \n    MIDDLEWARE.run(\"after:instantiated\", args);\n    \n    args = args[0] = null;\n}\n\n\nXhr.prototype = instantiate(BASE, {\n    level: 1,\n    bindMethods: BASE_PROTOTYPE.bindMethods.concat([\n                    'onReadyStateChange'\n                ]),\n    \n    constructor: Xhr,\n    \n    onReadyStateChange: function () {\n        var me = this,\n            request = me.request,\n            xhr = request.xhrTransport,\n            run = MIDDLEWARE.run,\n            args = [me, request],\n            resolve = request.resolve,\n            reject = request.reject;\n        var status;\n        \n        if (!request.aborted && resolve && reject) {\n            \n            run(\"before:readystatechange\", args);\n            \n            switch (xhr.readyState) {\n            case STATE_UNSENT:\n            case STATE_OPENED:\n            case STATE_HEADERS_RECEIVED: \n            case STATE_LOADING: break;\n            case STATE_DONE:\n                status = xhr.status;\n                if (status < 200 || status > 299) {\n                    reject(status);\n                }\n                else {\n                    resolve(status);\n                }\n            }\n            run(\"after:statechange\", args);\n        }\n        me = xhr = request = args = args[0] = args[1] = null;\n    },\n    \n    createTransportPromise: function(request) {\n        function bind(resolve, reject) {\n            var local = request;\n            local.resolve = resolve;\n            local.reject = reject;\n            local = null;\n        }\n        return new Promise(bind);\n    },\n    \n    onSetup: function (request) {\n        var me = this,\n            args = [me, request],\n            run = MIDDLEWARE.run,\n            xhr = new (global.XMLHttpRequest)();\n            \n        \n        request.xhrTransport = xhr;\n        \n        run(\"before:setup\", args);\n        \n        xhr.onreadystatechange = me.onReadyStateChange;\n        xhr.open(request.method.toUpperCase(), request.getUrl(), true);\n        \n        \n        run(\"after:setup\", args);\n        \n        xhr = args = args[0] = args[1] = null;\n        \n    },\n    \n    onTransport: function (request) {\n        var me = this,\n            xhr = request.xhrTransport,\n            headers = request.headers,\n            args = [me, request];\n       \n        MIDDLEWARE.run(\"before:request\", args);\n       \n        request.transportPromise = me.createTransportPromise(request);\n        \n        \n        \n        // apply headers\n        headers = request.headers;\n        if (object(headers)) {\n            each(headers, applyHeader, xhr);\n        }\n        \n        xhr.send(request.body);\n        \n        MIDDLEWARE.run(\"after:request\", args);\n        \n        \n        xhr = args = args[0] = args[1] = null;\n        \n        \n    },\n    \n    // process success\n    onSuccess: function (request) {\n        var me = this,\n            xhr = request.xhrTransport,\n            response = request.response,\n            args = [me, request],\n            run = MIDDLEWARE.run;\n        \n        response.status = xhr.status;\n        response.statusText = xhr.statusText;\n        response.addHeaders(xhr.getAllResponseHeaders());\n        response.body = xhr.responseText;\n        \n        run(\"after:response\", args);\n        \n        xhr = args = args[0] = args[1] = null;\n        \n    },\n    \n    onCleanup: function (request) {\n        var me = this,\n            xhr = request.xhrTransport;\n        var args;\n        \n        if (xhr) {\n            args = [me, request];\n            MIDDLEWARE.run(\"after:cleanup\", args);\n            args = args[0] = args[1] = \n                    xhr = xhr.onreadystatechange = null;\n        }\n        \n        request.transportPromise = \n            request.resolve =\n            request.reject = \n            request.xhrTransport = xhr = null;\n    }\n\n});\n\n\n\nexport default Xhr;","\"use strict\";\n\nimport {\n            string,\n            array,\n            clear,\n            instantiate\n        } from \"libcore\";\n        \nimport {\n            on,\n            un,\n            dispatch,\n            replace,\n            remove\n        } from \"libdom\";\n\n\nimport {\n            jsonify,\n            each\n        } from \"../transform/helper.js\";\n\nimport BASE from \"./base.js\";\n\nvar BASE_PROTOTYPE = BASE.prototype,\n    RESPONSE_TRIM = /(^<pre>|<\\/pre>$)/ig,\n    FILE_UPLOAD_GEN = 0;\n\nfunction createForm(method, url, contentType, blankDocument) {\n    var doc = global.document,\n        id = 'libdom-http-oldschool-form' + (++FILE_UPLOAD_GEN),\n        div = doc.createElement('div');\n    var iframe;\n        \n    div.style.cssText = ([\n            \"visibility: hidden\",\n            \"position: fixed\",\n            \"top: -10px\",\n            \"left: -10px\",\n            \"overflow: hidden\",\n            \"height: 1px\",\n            \"width: 1px\"\n        ]).join(\";\");\n    \n    div.innerHTML = ([\n            '<form id=\"', id ,'\"',\n                ' method=\"', method.toUpperCase(),'\"',\n                ' action=\"', encodeURI(url),'\"',\n                ' target=\"', id,'-result\"',\n                ' enctype=\"', contentType, '\"',\n                ' encoding=\"', contentType,'\"',\n                ' data-readystate=\"uninitialized\">',\n                '<iframe name=\"', id,'-result\"',\n                    ' id=\"', id, '-result\">',\n                    ' src=\"' + blankDocument + '\">',\n                '</iframe>',\n            '</form>'\n        ]).join(\"\");\n    \n    iframe = div.firstChild.firstChild;\n    \n    on(iframe, 'load', frameFirstOnloadEvent);\n    \n    doc.body.appendChild(div);\n    \n    doc = div = iframe = null;\n    return id;\n}\n\nfunction frameFirstOnloadEvent(event) {\n    var target = event.target,\n        form = target.parentNode;\n        \n    un(target, 'load', frameFirstOnloadEvent);\n    \n    form.setAttribute('data-readystate', 'ready');\n    \n    dispatch(form, 'libdom-http-ready', {});\n    \n    target = form = null;\n}\n\nfunction getForm(id) {\n    return global.document.getElementById(id);\n}\n\nfunction createField(operation, name, value, type, fieldType) {\n    var impostors = operation.impostors,\n        fragment = operation.fragment,\n        isField = type === \"field\",\n        isFile = isField && fieldType === \"file\",\n        input = null;\n    var parent;\n    \n    // include only if it has value\n    if (isFile && value.value) {\n        \n        parent = value.parentNode;\n        if (parent) {\n            input = value.cloneNode();\n            input.disabled = true;\n            input.readOnly = true;\n            impostors[impostors.length] = [value, input];\n            replace(value, input);\n        }\n        input = value;\n        operation.files = true;\n        \n    }\n    else if (!isFile) {\n        \n        if (isField) {\n            value = value.value;\n        }\n        \n        if (value === 'number') {\n            value = isFinite(value) ? value.toString(10) : '';\n        }\n        else if (!string(value)) {\n            value = jsonify(value);\n        }\n        \n        input = fragment.ownerDocument.createElement('input');\n        input.type = \"hidden\";\n        input.name = name;\n        input.value = value;\n        \n    }\n    \n    if (input) {\n        fragment.appendChild(input);\n    }\n    \n    fragment = parent = input = null;\n    \n}\n\nfunction revertImpostors(impostors) {\n    var l, pair, original, impostor, parent;\n    \n    for (l = impostors.length; l--;) {\n        pair = impostors[l];\n        original = pair[0];\n        impostor = pair[1];\n        parent = impostor.parentNode;\n        if (parent) {\n            parent.replaceChild(original, impostor);\n        }\n        parent = pair = pair[0] = pair[1] = original = impostor = null;\n    }\n\n}\n\n    \nfunction FormUpload() {\n    var me = this;\n        \n    BASE.apply(me, arguments);\n\n}\n\n\nFormUpload.prototype = instantiate(BASE, {\n    constructor: FormUpload,\n    \n    blankDocument: 'about:blank',\n    defaultType: 'application/json',\n    \n    bindMethods: BASE_PROTOTYPE.bindMethods.concat([\n                    'onFormReady',\n                    'onFormDeferredSubmit',\n                    'onRespond'\n                ]),\n    \n    createTransportPromise: function (request) {\n        function bind(resolve, reject) {\n            var local = request;\n            local.resolve = resolve;\n            local.reject = reject;\n        }\n        return new Promise(bind);\n    },\n    \n    onFormReady: function () {\n        var me = this,\n            request = me.request,\n            form = request.form;\n\n        // unset event if it was set\n        un(form, 'libdom-http-ready', me.onFormReady);\n        \n        form.enctype = form.encoding = request.contentType;\n        \n        request.deferredSubmit = global.setTimeout(me.onFormDeferredSubmit, 10);\n        \n        form = null;\n        \n        \n    },\n    \n    onFormDeferredSubmit: function () {\n        var me = this,\n            request = me.request,\n            form = request && request.form;\n        \n        if (form) {\n            on(request.iframe, 'load', me.onRespond);\n            form.submit();\n            \n        }\n        else if (request) {\n            request.reject(408);\n        }\n        \n        request = form = null;\n    },\n    \n    onRespond: function () {\n        var me = this,\n            request = me.request,\n            iframe = request.iframe,\n            success = false,\n            docBody = '';\n        \n        un(iframe, 'load', me.onRespond);\n        \n        try {\n            docBody = iframe.contentWindow.document.body.innerHTML;\n            success = true;\n        }\n        catch (e) {}\n\n        if (success) {\n            request.formResponse = docBody.replace(RESPONSE_TRIM, \"\");\n            request.resolve(200);\n        }\n        else {\n            request.reject(406);\n        }\n        \n        iframe = null;\n        \n    },\n    \n    onSetup: function (request) {\n        var me = this,\n            impostors = [],\n            id = createForm(request.method,\n                            request.getUrl(),\n                            request.contentType,\n                            me.blankDocument),\n            form = getForm(id),\n            operation = {\n                impostors: impostors,\n                fragment: global.document.createDocumentFragment(),\n                files: false,\n                driver: me,\n                request: request\n            },\n            currentResponseType = request.responseType;\n            \n        // recreate request\n        each(request.data, createField, operation);\n        \n        // add fields\n        form.appendChild(operation.fragment);\n        request.form = form;\n        request.iframe = form.firstChild;\n        request.impostors = operation.impostors;\n        request.fileUpload = operation.files;\n        \n        // use application.json as default response type\n        if (!string(currentResponseType)) {\n            request.responseType = me.defaultType;\n        }\n        \n        // cleanup operation\n        clear(operation);\n        \n        request.transportPromise = me.createTransportPromise(request);\n        \n        form = null;\n        \n    },\n    \n    onTransport: function (request) {\n        \n        var form = request.form,\n            contentType = 'application/x-www-form-urlencoded';\n        \n        // set proper content-type\n        if (request.fileUpload) {\n            contentType = 'multipart/form-data';\n        }\n        \n        request.addHeaders('Content-type: ' + contentType);\n        \n        if (form.getAttribute('data-readystate') === 'ready') {\n            this.onFormReady();\n        }\n        else {\n            on(form, 'libdom-http-ready', this.onFormReady);\n        }\n        \n    },\n    \n    onSuccess: function (request) {\n        var me = this,\n            response = me.response,\n            responseBody = request.formResponse;\n        \n        if (string(responseBody)) {\n            response.body = responseBody;\n        }\n    },\n    \n    onCleanup: function (request) {\n        var impostors = request.impostors,\n            form = request.form;\n        \n        // return impostors\n        if (array(impostors)) {\n            revertImpostors(impostors);\n        }\n        \n        if (form) {\n            remove(form.parentNode || form);\n        }\n        \n        request.transportPromise = \n            request.resolve =\n            request.reject = \n            request.form = form = null;\n    }\n\n    \n});\n\nexport default FormUpload;\n","'use strict';\n\nimport {\n            string\n        } from \"libcore\";\n        \nimport {\n            jsonify,\n            each\n        } from \"./helper.js\";\n\n\nfunction appendFormData(operation, name, value, type, fieldType) {\n    var formData = operation.returnValue,\n        isString = string;\n    var list, c, l, filename;\n    \n    // don't use parsed name for formData\n    if (type === 'field') {\n        \n        if (fieldType === \"file\") {\n            list = value.files;\n            for (c = -1, l = list.length; l--;) {\n                value = list[++c];\n                filename = value.name;\n\n                if (isString(filename)) {\n                    formData.append(name, value, filename);\n                }\n                else {\n                    formData.append(name, value);\n                }\n            }\n            formData = null;\n            return;\n        }\n        value = value.value;\n    }\n\n        \n    // natives\n    if (typeof value === 'number') {\n        value = isFinite(value) ? value.toString(10) : '';\n    }\n    else if (typeof value !== 'string') {\n        value = jsonify(value);\n    }\n    formData.append(name, value);\n    \n    formData = null;\n}\n\n\nfunction convert(data) {\n    return [null,\n            each(data,\n                appendFormData,\n                {\n                    returnValue: new (global.FormData)()\n                })];\n    \n}\n\n\nexport default convert;","'use strict';\n\nimport {\n            string,\n            number,\n            object,\n            array,\n            contains,\n            each as eachProperty\n        } from \"libcore\";\n        \nvar LINE_SPLIT_RE = /\\r\\n|\\r|\\n/,\n    LINE_PAIR_RE = /^([^ \\r\\n\\t\\s\\:]+)\\:(.+)$/,\n    LINE_EXTENSION_RE = /^([ \\r\\n\\t\\s]+.+|[^\\:]+)$/,\n    LINE_REQUEST_RE =\n        /^([a-z]+)[ \\t\\s]+(\\/[^\\:]+)[ \\t\\s]+(HTTP\\/[0-9]+\\.[0-9]+)$/i,\n    LINE_RESPONSE_RE =\n        /^(HTTP\\/[0-9]+.[0-9]+)[ \\t\\s]+([0-9]+)[ \\t\\s]+([a-z0-9\\-\\_]+)$/i,\n    LINE_TRIM = /^[ \\t\\s]*(.+)[ \\t\\s]*$/,\n    MULTI_VALUE_RE = /Set\\-cookie/i,\n    exported = {\n        each: each,\n        parse: parse,\n        headerName: headerName\n    };\n\n\n\nfunction parseHeaderString(str, callback, scope) {\n    var lines = str.split(LINE_SPLIT_RE),\n        pairRe = LINE_PAIR_RE,\n        extensionRe = LINE_EXTENSION_RE,\n        requestRe = LINE_REQUEST_RE,\n        responseRe = LINE_RESPONSE_RE,\n        trimRe = LINE_TRIM,\n        multivalueRe = MULTI_VALUE_RE,\n        separator = ':',\n        trimReplace = \"$1\",\n        normalize = headerName,\n        l = lines.length,\n        c = -1,\n        headers = {},\n        names = [],\n        nl = 0,\n        name = null;\n    var line, index, value, values, exist;\n    \n    if (typeof scope === 'undefined') {\n        scope = null;\n    }\n        \n    // parse\n    for (; l--;) {\n        line = lines[++c];\n        \n        // header request/response\n        if (!c &&\n            requestRe.test(line) || responseRe.test(line)) {\n            names[nl++] = \"\";\n            headers[\"\"] = line;\n            continue;\n            \n        }\n        \n        // pair\n        if (pairRe.test(line)) {\n            index = line.indexOf(separator);\n            name = line.substring(0, index);\n            value = line.\n                        substring(index + 1, line.length).\n                        replace(trimRe, trimReplace);\n            \n            if (!value) {\n                continue;\n            }\n            \n            // normalize\n            name = normalize(name);\n            \n            \n            exist = contains(headers, name);\n            if (!exist) {\n                names[nl++] = name;\n            }\n            \n            if (multivalueRe.test(name)) {\n                if (!exist) {\n                    headers[name] = [];\n                }\n                values = headers[name];\n                values[values.length] = value;\n            }\n            else {\n                headers[name] = value;\n            }\n            \n        }\n        // continuation\n        else if (name && extensionRe.test(line)) {\n            value = line.replace(trimRe, trimReplace);\n            \n            if (multivalueRe.test(name)) {\n                values = headers[name];\n                values[values.length - 1] += ' ' + value;\n            }\n            else {\n                headers[name] += ' ' + value;\n            }\n            \n        }\n    }\n    \n    // callback\n    for (c = -1, l = names.length; l--;) {\n        name = names[++c];\n        callback.call(scope, name, headers[name]);\n    }\n}\n\n\n\nfunction parseCallback(name, values) {\n    \n    /* jshint validthis:true */\n    this[name] = values;\n}\n\nfunction cleanArrayValues(array) {\n    var isString = string,\n        isNumber = number,\n        l = array.length;\n    var value;\n    \n    for (; l--;) {\n        value = array[l];\n        if (isNumber(value)) {\n            array[l] = value.toString(10);\n        }\n        else if (!isString(value)) {\n            array.splice(l, 1);\n        }\n    }\n    return array;\n}\n\nfunction onEachInput(value, name) {\n    var context = this,\n        callback = context[0],\n        scope = context[1],\n        multivalueRe = MULTI_VALUE_RE;\n    \n    var len;\n    \n    name = headerName(name);\n    \n    if (string(value) || number(value)) {\n        callback.call(scope, name,\n                                multivalueRe.test(name) ?\n                                    [value] : value);\n    }\n    else if (array(value)) {\n        \n        value = cleanArrayValues(value.slice(0));\n        \n        if (!multivalueRe.test(name)) {\n            len = value.length;\n            value = len ? value[len - 1] : '';\n        }\n        \n        if (value.length) {\n            callback.call(scope, name, value);\n        }\n    }\n}\n\nexport \n    function headerName(name) {\n        if (!name) {\n            return '';\n        }\n        \n        return name.charAt(0).toUpperCase() +\n                    name.\n                        substring(1, name.length).\n                        toLowerCase();\n        \n    }\n    \nexport\n    function each(input, callback, scope, current) {\n        \n        // join as string\n        if (array(input)) {\n            input = cleanArrayValues(input.slice(0)).join(\"\\r\\n\");\n        }\n        \n        if (string(input)) {\n            parseHeaderString(input, callback, scope, current);\n            \n        }\n        else if (object(input)) {\n            \n            if (typeof scope === 'undefined') {\n                scope = null;\n            }\n            \n            eachProperty(input,\n                         onEachInput,\n                         [callback,\n                          scope\n                            \n                         ],\n                         true);\n            \n        }\n        else {\n            \n            return false;\n        }\n        \n        return true;\n        \n    }\n    \nexport\n    function parse(headers) {\n        var values = {};\n        return each(headers, parseCallback, values) && values;\n    }\n    \nexport default exported;\n","'use strict';\n\nimport {\n            string,\n            object,\n            assign,\n            contains,\n            clear,\n            instantiate\n        } from \"libcore\";\n        \nimport { destructor as domDestructor } from \"libdom\";\n        \nimport {\n            parse,\n            headerName\n        } from \"./header.js\";\n\nimport {\n            transform\n        } from \"./transform.js\";\n\nvar CLEANING = false,\n    CLEAN_INTERVAL = 1000,\n    TTL = 10000,\n    RUNNING = false,\n    OPERATIONS = [],\n    URL_QUERY_STRING_RE = /^([^\\?\\#]+)(\\?[^\\?\\#]*)?(\\#.*)?$/;\n    \nfunction applyQueryString(url, queryString) {\n    var match = url.match(URL_QUERY_STRING_RE);\n    var query;\n    \n    if (match && string(queryString)) {\n        query = match[2];\n        match[2] = (query ? query + '&' : '?') + queryString;\n        match[3] = match[3] || '';\n        return match.slice(1).join('');\n    }\n    \n    return url;\n}\n\n\n\nfunction onCleanup(force) {\n    var list = OPERATIONS,\n        id = RUNNING;\n    var len, operation, now, ttl, created;\n\n    if (!CLEANING) {\n        CLEANING = true;\n        now = (new Date()).getTime();\n        ttl = TTL;\n        force = force === true;\n        \n        for (len = list.length; len--;) {\n            operation = list[len];\n\n            if (force) {\n                operation.destroy();\n                \n            }\n            else if (!operation.destroyed) {\n                created = operation.createdAt;\n                \n                if (!created || operation.processing) {\n                    operation.createdAt = now;\n                }\n                else if (created + ttl < now) {\n                    operation.destroy();\n                }\n            }\n            \n            if (operation.destroyed) {\n                list.splice(len, 1);\n            }\n        }\n        \n        // unset running interval if no operations left\n        if (!list.length && id) {\n            clearInterval(id);\n            RUNNING = false;\n        }\n        CLEANING = false;\n    }\n}\n\nfunction runCleaner(force) {\n    var id = RUNNING;\n    \n    if (force === true) {\n        if (id) {\n            clearInterval(id);\n            RUNNING = false;\n        }\n        onCleanup(force);\n    }\n    else if (!id) {\n        RUNNING = setInterval(onCleanup, CLEAN_INTERVAL);\n    }\n}\n\nfunction destructor() {\n    runCleaner(true);\n}\n\nfunction Request() {\n    Operation.apply(this, arguments);\n}\n\nfunction Response() {\n    Operation.apply(this, arguments);\n}\n\n\nfunction Operation() {\n    var list = OPERATIONS,\n        me = this;\n    me.destroyed = false;\n    list[list.length] = me;\n    runCleaner();\n}\n\nOperation.prototype = {\n    \n    createdAt: void(0),\n    contentType: 'application/octet-stream',\n    headers: null,\n    body: null,\n    data: null,\n    destroyed: true,\n    processing: false,\n    constructor: Operation,\n    \n    begin: function () {\n        var me = this;\n        if (!me.destroyed && !me.processing) {\n            me.processing = true;\n            delete me.createdAt;\n            runCleaner();\n        }\n        return me;\n    },\n    \n    end: function () {\n        var me = this;\n        if (!me.destroyed && me.processing) {\n            delete me.processing;\n            delete me.createdAt;\n            runCleaner();\n        }\n        return me;\n    },\n    \n    addHeaders: function (headers) {\n        var me = this;\n        var current, contentType;\n            \n        headers = parse(headers);\n        \n        if (headers) {\n            current = me.headers;\n            if (object(current)) {\n                assign(current, headers);\n            }\n            else {\n                me.headers = headers;\n            }\n            \n            // apply content type from headers\n            contentType = me.header('content-type');\n            if (contentType) {\n                me.contentType = contentType;\n            }\n            else {\n                delete me.contenType;\n            }\n            \n        }\n        \n        return this;\n    },\n    \n    header: function (name) {\n        var me = this,\n            current = me.headers;\n        \n        if (string(name) && object(current)) {\n            name = headerName(name);\n            \n            if (contains(current, name)) {\n                return current[name];\n            }\n            \n        }\n        \n        return null;\n    },\n    \n    destroy: function () {\n        var me = this;\n        if (!me.destroyed) {\n            me.destroyed = true;\n            clear(me);\n        }\n        return me;\n    }\n};\n\n\nRequest.prototype = instantiate(Operation, {\n    url: null,\n    method: 'get',\n    constructor: Request,\n    response: null,\n    aborted: false,\n    timeout: 0,\n    config: null,\n    queryTransformer: 'application/x-www-form-urlencoded',\n    queryAllowed: true,\n    allowedPayload: true,\n    \n    getUrl: function () {\n        var me = this,\n            isString = string,\n            url = me.url,\n            query = me.query,\n            data = me.data,\n            transformerType = me.queryTransformer,\n            apply = applyQueryString;\n            \n        \n        if (me.queryAllowed && isString(url) && isString(transformerType)) {\n            // transform url\n            query = transform(transformerType, false, query)[1];\n            if (isString(query)) {\n                url = apply(url, query);\n            }\n            \n            // should include body as query string\n            if (me.allowedPayload === false) {\n                data = transform(transformerType, false, data)[1];\n                \n                if (isString(data)) {\n                    url = apply(url, data);\n                }\n            }\n        }\n        return url;\n    },\n    \n    settings: function (name) {\n        var config = this.config;\n            \n        if (object(config) && contains(config, name)) {\n            return config[name];\n        }\n        return void(0);\n    },\n    \n    process: function () {\n        var me = this,\n            result = transform(me.header('content-type'),\n                               false,\n                               me.data),\n            headers = result[0],\n            responseType = me.responseType,\n            response = me.response;\n        \n        // data will be parsed to create body based on the content type\n        if (headers) {\n            me.addHeaders(headers);\n        }\n        \n        if (me.allowedPayload === false) {\n            delete me.body;\n        }\n        else {\n            me.body = result[1];\n        }\n        \n        // create response\n        if (response) {\n            response.destroy();\n        }\n        \n        me.response = response = new Response();\n        \n        // use response type as resonse contentType\n        if (string(responseType)) {\n            response.addHeaders('Content-type: ' + responseType);\n        }\n        response.request = me;\n        response.begin();\n        \n        result = null;\n    }\n});\n\nResponse.prototype = instantiate(Operation, {\n    constructor: Response,\n    status: 0,\n    statusText: 'Uninitialized',\n    process: function () {\n        var me = this,\n            result = transform(me.header('content-type'),\n                                        true,\n                                        me.body),\n            headers = result[0];\n        \n        // body will be parsed to create data based on the content type\n        if (headers) {\n            me.addHeaders(headers);\n        }\n\n        me.data = result[1];\n        \n    }\n});\n\n\ndomDestructor(destructor);\n\nexport default Request;","'use strict';\n\nimport {\n            string,\n            object,\n            run,\n            createRegistry\n        } from \"libcore\";\n        \nimport { get as getModule } from \"./chain.js\";\n\nimport {\n            exists,\n            use,\n            get\n        } from \"./driver.js\";\n        \nimport OPERATION from \"./operation.js\";\n\nimport {\n            form\n        } from \"./transform/helper.js\";\n\n\nvar DEFAULTS = createRegistry(),\n    METHODS = ['get','post','put','patch','delete','options'],\n    ALLOWED_PAYLOAD = ['post', 'put', 'patch'],\n    exported = {\n        request: request,\n        defaults: defaults\n    };\n    \n\n\nfunction normalizeMethod(method) {\n    if (string(method)) {\n        method = method.toLowerCase();\n        if (METHODS.indexOf(method) !== -1) {\n            return method;\n        }\n    }\n    \n    return DEFAULTS.get('method');\n}\n\nfunction sniffDriver(config) {\n    var driver = config.driver;\n    \n    // call middleware\n    run(\"libdom-http.driver.resolve\", [config, driver]);\n    driver = config.driver;\n    \n    if (string(driver) && exists(driver)) {\n        return driver;\n    }\n    \n    // use default\n    return use();\n    \n}\n\nfunction applyRequestForm(form, requestObject) {\n    var isString = string;\n    var item;\n    \n    // use this as request header only if not default\n    item = form.getAttribute('enctype') || form.getAttribute('encoding');\n    if (isString(item)) {\n        requestObject.addHeaders('Content-type: ' + item);\n    }\n    \n    item = form.action;\n    if (isString(item)) {\n        requestObject.url = item;\n    }\n    \n    item = form.method;\n    if (isString(item)) {\n        requestObject.method = normalizeMethod(item);\n    }\n    \n    item = form.getAttribute('data-driver');\n    if (isString(item)) {\n        requestObject.driver = item;\n    }\n    \n    \n    item = form.getAttribute('data-response-type');\n    if (isString(item)) {\n        requestObject.responseType = item;\n    }\n    \n    requestObject.data = form;\n}\n\nfunction applyRequestConfig(config, requestObject) {\n    var isString = string,\n        undef = void(0);\n    var item;\n    \n    // apply defaults\n    item = config.form || config.data || config.params || config.body;\n    if (form(item)) {\n        applyRequestForm(item, requestObject);\n    }\n    else if (item !== null || item !== undef) {\n        requestObject.data = item;\n    }\n    \n    item = config.query || config.urlData || config.urlParams;\n    if (form(item) || (item !== null && item !== undef)) {\n        requestObject.query = item;\n    }\n    \n    item = config.url;\n    if (isString(item)) {\n        requestObject.url = item;\n    }\n    \n    item = config.method;\n    if (isString(item)) {\n        requestObject.method = normalizeMethod(item);\n    }\n    \n    item = config.driver;\n    if (isString(item)) {\n        requestObject.driver = item;\n    }\n    \n    item = config.responseType;\n    if (isString(item)) {\n        requestObject.responseType = item;\n    }\n    \n    // add headers\n    requestObject.addHeaders('headers' in config && config.headers);\n    \n    requestObject.config = config;\n    \n    item = null;\n}\n\nexport\n    function request(url, config) {\n        var isString = string,\n            isObject = object,\n            isForm = form,\n            applyConfig = applyRequestConfig,\n            requestObject = new OPERATION(),\n            PROMISE = Promise;\n        var driver, promise;\n        \n        // apply defaults\n        applyConfig(DEFAULTS.clone(), requestObject);\n        \n        // process config\n        if (isString(url)) {\n            \n            if (isObject(config)) {\n                applyConfig(config, requestObject);\n            }\n            else if (isForm(config)) {\n                applyRequestForm(config, requestObject);\n            }\n            \n            requestObject.url = url;\n            \n        }\n        else if (isObject(url)) {\n            applyConfig(url, requestObject);\n        }\n        else if (isForm(url)) {\n            applyRequestForm(url, requestObject);\n        }\n        \n        // decide if body is allowed or not based from methods\n        if (ALLOWED_PAYLOAD.indexOf(requestObject.method) === -1) {\n            requestObject.allowedPayload = false;\n        }\n        \n        \n        // validate\n        if (isString(requestObject.url)) {\n            \n            driver = sniffDriver(requestObject);\n            if (driver) {\n                driver = new (get(driver))(requestObject);\n                requestObject.driver = driver;\n                promise =  PROMISE.resolve(requestObject).\n                                then(driver.setup).\n                                then(driver.transport).\n                                then(driver.success)\n                                [\"catch\"](driver.error);\n                \n                requestObject.api = promise;\n                requestObject = driver = null;\n                return promise;\n            }\n            \n        }\n        \n        return PROMISE.reject(\"Invalid HTTP request configuration.\");\n        \n    }\n\nexport\n    function defaults(name, value) {\n        var all = DEFAULTS;\n        if (arguments.length > 1) {\n            all.set(name, value);\n            return getModule();\n        }\n        \n        return all.get(name);\n        \n    }\n\n\nexport default exported;\n\n\n// set default driver\nuse('xhr');\n\n// set default method\nDEFAULTS.set('method', 'get');\n\n// add default header\nDEFAULTS.set('headers', {\n    'accept': 'application/json,text/x-json,text/plain,*/*;q=0.8',\n    'content-type': 'application/json'\n});\n\n\n\n","export default typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {}\n","'use strict';\n\nimport DOM from \"libdom\";\n\n\nvar ENV = DOM.env,\n    G = global,\n    XHR = G.XMLHttpRequest,\n    support_xhr = !!XHR,\n    support_xhrx = false,\n    support_xhrmime = false,\n    support_xhrtime = false,\n    support_xhrbin = false,\n    support_xhrprogress = false,\n    support_xdr = !!G.XDomainRequest;\n\nif (ENV) {\n    if (ENV.browser) {\n        if (XHR) {\n            XHR = XHR.prototype;\n            support_xhrx = 'withCredentials' in XHR;\n            support_xhrmime = 'overrideMimeType' in XHR;\n            support_xhrtime = 'timeout' in XHR;\n            support_xhrbin = 'sendAsBinary' in XHR;\n            support_xhrprogress = 'onprogress' in XHR;\n        }\n        \n    }\n    else if (ENV.node) {\n        \n    }\n}\n\nexport default {\n        xhr: support_xhr,\n        xhrx: support_xhrx,\n        xhrmime: support_xhrmime,\n        xhrtime: support_xhrtime,\n        xhrbin: support_xhrbin,\n        xhrbytes: support_xhrprogress,\n        xdr: support_xdr,\n        formdata: !!G.FormData,\n        file: !!G.File,\n        blob: !!G.Blob\n    };\n\nG = XHR = null;","'use strict';\n\nimport {\n            number,\n            middleware\n        } from \"libcore\";\n        \nimport {\n            on,\n            un\n        } from \"libdom\";\n\nimport DETECT from \"../detect.js\";\n\nimport XHR from \"./xhr.js\";\n\nvar MIDDLEWARE = middleware(\"libdom-http.driver.xhr\"),\n    register = MIDDLEWARE.register,\n    BEFORE_REQUEST = \"before:request\",\n    PROTOTYPE = XHR.prototype,\n    BINDS = PROTOTYPE.bindMethods,\n    BIND_LENGTH = BINDS.length,\n    PROGRESS = DETECT.xhrbytes,\n    features = 0;\n\n// timeout\nfunction addTimeout(instance, request) {\n    var timeout = request.settings('timeout');\n    \n    if (number(timeout) && timeout > 10) {\n        request.xhrTransport.timeout = timeout;\n    }\n}\n\n// withCredentials\nfunction addWithCredentials(instance, request) {\n\n    if (request.settings('withCredentials') === true) {\n        request.xhrTransport.withCredentials = true;\n    }\n}\n\n// Progress\nfunction onProgress(event) {\n    /* jshint validthis: true */\n    var instance = this,\n        request = instance.request,\n        api = request.api;\n    var loaded;\n    \n    if (request && event.lengthComputable) {\n        loaded = event.loaded / event.total;\n        \n        request.percentLoaded = loaded;\n        if (api) {\n            api.percentLoaded = loaded;\n        }\n    }\n\n}\n\nfunction addProgressEvent(instance, request) {\n    var api = request.api;\n    \n    api.percentLoaded = 0;\n    \n    if (request) {\n        request.percentLoaded = 0;\n    }\n    \n    on(request.xhrTransport, 'progress', instance.onProgress);\n}\n\n// cleanup\nfunction cleanup(instance, request) {\n    if (PROGRESS) {\n        un(request.xhrTransport, 'progress', instance.onProgress);\n    }\n}\n\n\nfunction processFormData(instance, request) {\n\n    // remove content type and use FormData defaults\n    if (request.body instanceof global.FormData) {\n        delete request.headers['Content-type'];\n    }\n\n}\n\n\n\n// apply middlewares according to capability of the platform\nif (DETECT.xhrx) {\n    features++;\n    register(BEFORE_REQUEST, addWithCredentials);\n}\n\n// form data fixes\nif (DETECT.formdata) {\n    features++;\n    register(BEFORE_REQUEST, processFormData);\n}\n\n// progress\nif (PROGRESS) {\n    features++;\n    BINDS[BIND_LENGTH++] = 'onProgress';\n    PROTOTYPE.onProgress = onProgress;\n    register(BEFORE_REQUEST, addProgressEvent);\n}\n\n// timeout\nif (DETECT.xhrtime) {\n    register(BEFORE_REQUEST, addTimeout);\n}\n\n\n\n// cleanup\nif (features) {\n    if (features > 2) {\n        PROTOTYPE.level = 2;\n    }\n    register(\"cleanup\", cleanup);\n}\n\n\nexport default XHR;","'use strict';\n\nimport { env } from \"libcore\";\n\nimport DETECT from \"./lib/detect.js\";\n\nimport DRIVER,\n        {\n            register as driverRegister,\n            use\n        } from \"./lib/driver.js\";\n\nimport TRANSFORMER,\n        {\n            register as transformRegister,\n            transform\n        } from \"./lib/transform.js\";\n\n\nimport xhrDriver from \"./lib/driver/xhr.js\";\nimport xhrDriver2 from \"./lib/driver/xhr2.js\";\n\nimport formUploadDriver from './lib/driver/form-upload.js';\n\nimport transformTextResponseDriver\n            from \"./lib/transform/response-text-plain.js\";\n            \nimport transformFormDataRequestDriver\n            from \"./lib/transform/request-html5-form-data.js\";\n\n\nif (!global.libdom) {\n    throw new Error(\"libdom package is not found! unable to load http module\");\n}\n\n\n\nif (DETECT.xhr) {\n    driverRegister('xhr', xhrDriver);\n    \n    driverRegister('xhr2', xhrDriver2);\n}\n\n// file upload drivers\nif (env && env.browser) {\n    driverRegister('form-upload',\n        DETECT.xhr && DETECT.file && DETECT.blob ?\n            // form data\n            xhrDriver2 :\n            \n            // old school iframe\n            formUploadDriver);\n}\n\n// Transform Drivers\ntransformRegister('text/plain',\n    true,\n    transformTextResponseDriver);\n\n\nif (DETECT.formdata) {\n    \n    // use html5 form data request\n    transformRegister('multipart/form-data',\n        false,\n        transformFormDataRequestDriver);\n}\n\n\n\n        \n        \nexport {\n            use,\n            driverRegister as driver,\n            \n            transform,\n            transformRegister as transformer\n        };\n        \nexport {\n            request,\n            defaults\n        } from \"./lib/request.js\";\n\n\nexport {\n            parse as parseHeader,\n            each as eachHeader\n        } from \"./lib/header.js\";\n","'use strict';\n\nimport {\n            number,\n            string\n        } from \"libcore\";\n\nfunction convert(data) {\n    \n    if (number(data)) {\n        data = data.toString(10);\n    }\n    \n    return ['Content-type: text/plain',\n            string(data) ?\n                data : ''];\n}\n\n\nexport default convert;","'use strict';\n\n\nimport { use } from \"./lib/chain.js\";\n\nimport * as moduleApi from \"./all.js\";\n\nuse(moduleApi);\n\nexport * from \"./all.js\";\n\nexport default moduleApi;\n"],"names":["get","MAIN_MODULE","register","name","Class","string","method","DRIVERS","set","prototype","type","DEFAULT","getModule","exists","use","arguments","length","parseType","match","subtype","parameters","value","l","defaultType","mtypeRe","MIME_TYPE_RE","paramRe","MIME_TYPE_PARAMS_RE","quotedRe","QUOTED_RE","parameterObject","test","toLowerCase","split","substring","join","root","params","isForm","form","is","tagName","toUpperCase","isField","field","onEachObjectValueProperty","context","this","eachField","eachValues","values","callback","operation","c","typeObject","TYPE_OBJECT","typeArray","TYPE_ARRAY","each","isObject","object","isObjectValue","elements","array","contains","returnValue","eachProperty","list","option","isString","hasName","fieldType","options","selected","checked","date","jsonify","raw","json","global","JSON","data","Error","stringify","e","createValue","items","isFinite","toString","jsonFill","convert","index","parse","encodeURIComponent","createBoundary","ender","Math","random","substr","output","len","total","BOUNDARY_LENGTH","eol","EOL","response","handler","finalType","current","all","transformers","TRANSFORMERS","responsePrefix","RESPONSE_PREFIX","REQUEST_PREFIX","transform","bind","instance","apply","Driver","me","bindMethods","bindMethod","applyHeader","setRequestHeader","Xhr","args","BASE","MIDDLEWARE","run","createForm","url","contentType","blankDocument","iframe","doc","document","id","FILE_UPLOAD_GEN","div","createElement","style","cssText","innerHTML","encodeURI","firstChild","on","frameFirstOnloadEvent","body","appendChild","event","target","parentNode","un","setAttribute","dispatch","getForm","getElementById","createField","impostors","fragment","isFile","input","cloneNode","disabled","readOnly","replace","files","ownerDocument","revertImpostors","pair","original","impostor","parent","replaceChild","FormUpload","appendFormData","filename","formData","append","parseHeaderString","str","scope","line","exist","lines","LINE_SPLIT_RE","pairRe","LINE_PAIR_RE","extensionRe","LINE_EXTENSION_RE","requestRe","LINE_REQUEST_RE","responseRe","LINE_RESPONSE_RE","trimRe","LINE_TRIM","multivalueRe","MULTI_VALUE_RE","normalize","headerName","headers","names","nl","indexOf","call","parseCallback","cleanArrayValues","isNumber","number","splice","onEachInput","slice","charAt","applyQueryString","queryString","query","URL_QUERY_STRING_RE","onCleanup","force","now","ttl","created","OPERATIONS","RUNNING","CLEANING","Date","getTime","TTL","destroy","destroyed","createdAt","processing","clearInterval","runCleaner","setInterval","CLEAN_INTERVAL","Request","Operation","Response","normalizeMethod","METHODS","DEFAULTS","sniffDriver","config","driver","applyRequestForm","requestObject","item","getAttribute","addHeaders","action","responseType","applyRequestConfig","urlData","urlParams","request","promise","applyConfig","OPERATION","PROMISE","Promise","clone","ALLOWED_PAYLOAD","allowedPayload","resolve","then","setup","transport","success","error","api","reject","defaults","self","window","ENV","DOM","env","G","XHR","XMLHttpRequest","support_xhr","support_xhrx","support_xhrmime","support_xhrtime","support_xhrbin","support_xhrprogress","support_xdr","XDomainRequest","browser","node","xhr","xhrx","xhrmime","xhrtime","xhrbin","xhrbytes","xdr","formdata","FormData","file","File","blob","Blob","createRegistry","transformRequestJSON","transformResponseJSON","boundary","aborted","constructor","onSetup","onTransport","onSuccess","status","onError","process","transportPromise","isFunction","begin","end","abort","middleware","BASE_PROTOTYPE","instantiate","level","concat","onReadyStateChange","xhrTransport","readyState","createTransportPromise","local","onreadystatechange","open","getUrl","send","statusText","getAllResponseHeaders","responseText","PROTOTYPE","BINDS","BIND_LENGTH","PROGRESS","DETECT","features","settings","withCredentials","onProgress","loaded","lengthComputable","percentLoaded","timeout","RESPONSE_TRIM","onFormReady","enctype","encoding","deferredSubmit","setTimeout","onFormDeferredSubmit","onRespond","submit","docBody","contentWindow","formResponse","createDocumentFragment","currentResponseType","fileUpload","clear","responseBody","remove","assign","header","contenType","queryTransformer","queryAllowed","transformerType","result","domDestructor","accept","content-type","libdom","driverRegister","xhrDriver","xhrDriver2","formUploadDriver","transformRegister","mainModule","moduleApi"],"mappings":"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"}